/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './range';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/security';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../util/form';
import * as import10 from '../../util/haptic';
import * as import11 from '../item/item';
import * as import12 from '../../config/config';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from '@angular/forms/src/directives/control_value_accessor';
import * as import15 from '@angular/core/src/linker/query_list';
import * as import16 from '@angular/core/src/linker/view_container';
import * as import17 from '../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import18 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import19 from '@angular/core/src/linker/template_ref';
import * as import20 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import21 from '@angular/common/src/directives/ng_for';
import * as import22 from '@angular/common/src/directives/ng_if';
export class Wrapper_Range {
  /*private*/ _eventHandler:Function;
  context:import0.Range;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  subscription0:any;
  constructor(p0:any,p1:any,p2:any,p3:any,p4:any,p5:any) {
    this._changed = false;
    this.context = new import0.Range(p0,p1,p2,p3,p4,p5);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
    this._expr_8 = import1.UNINITIALIZED;
    this._expr_9 = import1.UNINITIALIZED;
    this._expr_10 = import1.UNINITIALIZED;
    this._expr_11 = import1.UNINITIALIZED;
    this._expr_12 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_color(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.color = currValue;
      this._expr_0 = currValue;
    }
  }
  check_mode(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.mode = currValue;
      this._expr_1 = currValue;
    }
  }
  check_min(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.min = currValue;
      this._expr_2 = currValue;
    }
  }
  check_max(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.max = currValue;
      this._expr_3 = currValue;
    }
  }
  check_step(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.step = currValue;
      this._expr_4 = currValue;
    }
  }
  check_snaps(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.snaps = currValue;
      this._expr_5 = currValue;
    }
  }
  check_pin(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.pin = currValue;
      this._expr_6 = currValue;
    }
  }
  check_debounce(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_7,currValue))) {
      this._changed = true;
      this.context.debounce = currValue;
      this._expr_7 = currValue;
    }
  }
  check_dualKnobs(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_8,currValue))) {
      this._changed = true;
      this.context.dualKnobs = currValue;
      this._expr_8 = currValue;
    }
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_9,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_9 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_10:any = this.context._disabled;
    if (import3.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      view.renderer.setElementClass(el,'range-disabled',currVal_10);
      this._expr_10 = currVal_10;
    }
    const currVal_11:any = this.context._pressed;
    if (import3.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      view.renderer.setElementClass(el,'range-pressed',currVal_11);
      this._expr_11 = currVal_11;
    }
    const currVal_12:any = this.context._pin;
    if (import3.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      view.renderer.setElementClass(el,'range-has-pin',currVal_12);
      this._expr_12 = currVal_12;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.ionChange.subscribe(_eventHandler.bind(view,'ionChange'))); }
  }
}
export class Wrapper_RangeKnob {
  /*private*/ _eventHandler:Function;
  context:import0.RangeKnob;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.RangeKnob(p0);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_upper(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.upper = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_1:any = this.context.pressed;
    if (import3.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      view.renderer.setElementClass(el,'range-knob-pressed',currVal_1);
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = (this.context._val === this.context.range.min);
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      view.renderer.setElementClass(el,'range-knob-min',currVal_2);
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = (this.context._val === this.context.range.max);
    if (import3.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      view.renderer.setElementClass(el,'range-knob-max',currVal_3);
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this.context._x;
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      view.renderer.setElementStyle(el,'left',((view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_4) == null)? (null as any): view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_4).toString()));
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = this.context._val;
    if (import3.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      view.renderer.setElementAttribute(el,'aria-valuenow',((currVal_5 == null)? (null as any): currVal_5.toString()));
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this.context.range.min;
    if (import3.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      view.renderer.setElementAttribute(el,'aria-valuemin',((currVal_6 == null)? (null as any): currVal_6.toString()));
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = this.context.range.max;
    if (import3.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      view.renderer.setElementAttribute(el,'aria-valuemax',((currVal_7 == null)? (null as any): currVal_7.toString()));
      this._expr_7 = currVal_7;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_Range_Host:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,([] as any[]),{});
class View_Range_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.Range>;
  _Range_0_3:Wrapper_Range;
  __NG_VALUE_ACCESSOR_0_4:any[];
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_Range_Host0,renderType_Range_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  get _NG_VALUE_ACCESSOR_0_4():any[] {
    if ((this.__NG_VALUE_ACCESSOR_0_4 == null)) { (this.__NG_VALUE_ACCESSOR_0_4 = [this._Range_0_3.context]); }
    return this.__NG_VALUE_ACCESSOR_0_4;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'ion-range',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_Range0(this.viewUtils,this,0,this._el_0);
    this._Range_0_3 = new Wrapper_Range(this.injectorGet(import9.Form,this.parentIndex),this.injectorGet(import10.Haptic,this.parentIndex),this.injectorGet(import11.Item,this.parentIndex,(null as any)),this.injectorGet(import12.Config,this.parentIndex),new import13.ElementRef(this._el_0),this.renderer);
    this.compView_0.create(this._Range_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._Range_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.Range) && (0 === requestNodeIndex))) { return this._Range_0_3.context; }
    if (((token === import14.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._Range_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._Range_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._Range_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._Range_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 1))) {  }
  }
}
export const RangeNgFactory:import8.ComponentFactory<import0.Range> = new import8.ComponentFactory<import0.Range>('ion-range',View_Range_Host0,import0.Range);
const styles_Range:any[] = ([] as any[]);
var renderType_Range:import5.RenderComponentType = import3.createRenderComponentType('',2,import6.ViewEncapsulation.None,styles_Range,{});
export class View_Range0 extends import2.AppView<import0.Range> {
  _viewQuery_bar_0:import15.QueryList<any>;
  _viewQuery_slider_1:import15.QueryList<any>;
  _viewQuery_RangeKnob_2:import15.QueryList<any>;
  _el_0:any;
  _anchor_1:any;
  /*private*/ _vc_1:import16.ViewContainer;
  _TemplateRef_1_5:any;
  _NgFor_1_6:import17.Wrapper_NgFor;
  _el_2:any;
  _el_3:any;
  _el_4:any;
  compView_4:import2.AppView<import0.RangeKnob>;
  _RangeKnob_4_3:Wrapper_RangeKnob;
  _anchor_5:any;
  /*private*/ _vc_5:import16.ViewContainer;
  _TemplateRef_5_5:any;
  _NgIf_5_6:import18.Wrapper_NgIf;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_Range0,renderType_Range,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
    this._expr_17 = import1.UNINITIALIZED;
    this._expr_18 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_bar_0 = new import15.QueryList<any>();
    this._viewQuery_slider_1 = new import15.QueryList<any>();
    this._viewQuery_RangeKnob_2 = new import15.QueryList<any>();
    this.projectNodes(parentRenderNode,0);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','range-slider'),(null as any));
    this._anchor_1 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_1 = new import16.ViewContainer(1,0,this,this._anchor_1);
    this._TemplateRef_1_5 = new import19.TemplateRef_(this,1,this._anchor_1);
    this._NgFor_1_6 = new import17.Wrapper_NgFor(this._vc_1.vcRef,this._TemplateRef_1_5,this.parentView.injectorGet(import20.IterableDiffers,this.parentIndex),this.ref);
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','range-bar'),(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','range-bar range-bar-active'),(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray8(6,'class','range-knob-handle','role','slider','tabindex','0'),(null as any));
    this.compView_4 = new View_RangeKnob0(this.viewUtils,this,4,this._el_4);
    this._RangeKnob_4_3 = new Wrapper_RangeKnob(this.parentView.injectorGet(import0.Range,this.parentIndex));
    this.compView_4.create(this._RangeKnob_4_3.context);
    this._anchor_5 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_5 = new import16.ViewContainer(5,0,this,this._anchor_5);
    this._TemplateRef_5_5 = new import19.TemplateRef_(this,5,this._anchor_5);
    this._NgIf_5_6 = new import18.Wrapper_NgIf(this._vc_5.vcRef,this._TemplateRef_5_5);
    this.projectNodes(parentRenderNode,1);
    this._viewQuery_bar_0.reset([new import13.ElementRef(this._el_3)]);
    this.context._bar = this._viewQuery_bar_0.first;
    this._viewQuery_slider_1.reset([new import13.ElementRef(this._el_0)]);
    this.context._slider = this._viewQuery_slider_1.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._anchor_1,
      this._el_2,
      this._el_3,
      this._el_4,
      this._anchor_5
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import21.NgFor) && (1 === requestNodeIndex))) { return this._NgFor_1_6.context; }
    if (((token === import0.RangeKnob) && (4 === requestNodeIndex))) { return this._RangeKnob_4_3.context; }
    if (((token === import19.TemplateRef) && (5 === requestNodeIndex))) { return this._TemplateRef_5_5; }
    if (((token === import22.NgIf) && (5 === requestNodeIndex))) { return this._NgIf_5_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context._ticks;
    this._NgFor_1_6.check_ngForOf(currVal_1_0_0,throwOnChange,false);
    this._NgFor_1_6.ngDoCheck(this,this._anchor_1,throwOnChange);
    this._RangeKnob_4_3.ngDoCheck(this,this._el_4,throwOnChange);
    const currVal_5_0_0:any = this.context._dual;
    this._NgIf_5_6.check_ngIf(currVal_5_0_0,throwOnChange,false);
    this._NgIf_5_6.ngDoCheck(this,this._anchor_5,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
    this._vc_5.detectChangesInNestedViews(throwOnChange);
    const currVal_17:any = this.context._barL;
    if (import3.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this.renderer.setElementStyle(this._el_3,'left',((this.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_17) == null)? (null as any): this.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_17).toString()));
      this._expr_17 = currVal_17;
    }
    const currVal_18:any = this.context._barR;
    if (import3.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      this.renderer.setElementStyle(this._el_3,'right',((this.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_18) == null)? (null as any): this.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_18).toString()));
      this._expr_18 = currVal_18;
    }
    this._RangeKnob_4_3.checkHost(this,this.compView_4,this._el_4,throwOnChange);
    this.compView_4.detectChanges(throwOnChange);
    if (!throwOnChange) { if (this._viewQuery_RangeKnob_2.dirty) {
      this._viewQuery_RangeKnob_2.reset([
        this._RangeKnob_4_3.context,
        this._vc_5.mapNestedViews(View_Range2,(nestedView:View_Range2):any => {
          return [nestedView._RangeKnob_0_3.context];
        })
      ]
      );
      this.context._knobs = this._viewQuery_RangeKnob_2;
      this._viewQuery_RangeKnob_2.notifyOnChanges();
    } }
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
    this._vc_5.destroyNestedViews();
    this.compView_4.destroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 1)) { return new View_Range1(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    if ((nodeIndex == 5)) { return new View_Range2(this.viewUtils,this,5,this._anchor_5,this._vc_5); }
    return (null as any);
  }
}
class View_Range1 extends import2.AppView<any> {
  _el_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_Range1,renderType_Range,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','range-tick'),(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1:any = this.context.$implicit.left;
    if (import3.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementStyle(this._el_0,'left',((this.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_1) == null)? (null as any): this.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_1).toString()));
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = this.context.$implicit.active;
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementClass(this._el_0,'range-tick-active',currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_Range2 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.RangeKnob>;
  _RangeKnob_0_3:Wrapper_RangeKnob;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_Range2,renderType_Range,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray8(6,'class','range-knob-handle','role','slider','tabindex','0'),(null as any));
    this.compView_0 = new View_RangeKnob0(this.viewUtils,this,0,this._el_0);
    this._RangeKnob_0_3 = new Wrapper_RangeKnob(this.parentView.parentView.injectorGet(import0.Range,this.parentView.parentIndex));
    this.compView_0.create(this._RangeKnob_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.RangeKnob) && (0 === requestNodeIndex))) { return this._RangeKnob_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = true;
    this._RangeKnob_0_3.check_upper(currVal_0_0_0,throwOnChange,false);
    this._RangeKnob_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._RangeKnob_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  dirtyParentQueriesInternal():void {
    (<View_Range0>this.parentView)._viewQuery_RangeKnob_2.setDirty();
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
var renderType_RangeKnob_Host:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,([] as any[]),{});
class View_RangeKnob_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.RangeKnob>;
  _RangeKnob_0_3:Wrapper_RangeKnob;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_RangeKnob_Host0,renderType_RangeKnob_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'div',new import3.InlineArray8(6,'class','range-knob-handle','role','slider','tabindex','0'),rootSelector,(null as any));
    this.compView_0 = new View_RangeKnob0(this.viewUtils,this,0,this._el_0);
    this._RangeKnob_0_3 = new Wrapper_RangeKnob(this.injectorGet(import0.Range,this.parentIndex));
    this.compView_0.create(this._RangeKnob_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._RangeKnob_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.RangeKnob) && (0 === requestNodeIndex))) { return this._RangeKnob_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._RangeKnob_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._RangeKnob_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const RangeKnobNgFactory:import8.ComponentFactory<import0.RangeKnob> = new import8.ComponentFactory<import0.RangeKnob>('.range-knob-handle',View_RangeKnob_Host0,import0.RangeKnob);
const styles_RangeKnob:any[] = ([] as any[]);
var renderType_RangeKnob:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,styles_RangeKnob,{});
export class View_RangeKnob0 extends import2.AppView<import0.RangeKnob> {
  _anchor_0:any;
  /*private*/ _vc_0:import16.ViewContainer;
  _TemplateRef_0_5:any;
  _NgIf_0_6:import18.Wrapper_NgIf;
  _el_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_RangeKnob0,renderType_RangeKnob,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_0 = new import16.ViewContainer(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import19.TemplateRef_(this,0,this._anchor_0);
    this._NgIf_0_6 = new import18.Wrapper_NgIf(this._vc_0.vcRef,this._TemplateRef_0_5);
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','range-knob'),(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._anchor_0,
      this._el_1
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import22.NgIf) && (0 === requestNodeIndex))) { return this._NgIf_0_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.range.pin;
    this._NgIf_0_6.check_ngIf(currVal_0_0_0,throwOnChange,false);
    this._NgIf_0_6.ngDoCheck(this,this._anchor_0,throwOnChange);
    this._vc_0.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_0.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 0)) { return new View_RangeKnob1(this.viewUtils,this,0,this._anchor_0,this._vc_0); }
    return (null as any);
  }
}
class View_RangeKnob1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_RangeKnob1,renderType_RangeKnob,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_2 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','range-pin'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2:any = import3.inlineInterpolate(1,'',this.parentView.context._val,'');
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setText(this._text_1,currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}