/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './range';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/security';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../util/form';
import * as import10 from '../../util/haptic';
import * as import11 from '../item/item';
import * as import12 from '../../config/config';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from '@angular/forms/src/directives/control_value_accessor';
import * as import15 from '@angular/core/src/linker/query_list';
import * as import16 from '@angular/core/src/linker/view_container';
import * as import17 from '../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import18 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import19 from '@angular/core/src/linker/template_ref';
import * as import20 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import21 from '@angular/common/src/directives/ng_for';
import * as import22 from '@angular/common/src/directives/ng_if';
export var Wrapper_Range = (function () {
    function Wrapper_Range(p0, p1, p2, p3, p4, p5) {
        this._changed = false;
        this.context = new import0.Range(p0, p1, p2, p3, p4, p5);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
        this._expr_5 = import1.UNINITIALIZED;
        this._expr_6 = import1.UNINITIALIZED;
        this._expr_7 = import1.UNINITIALIZED;
        this._expr_8 = import1.UNINITIALIZED;
        this._expr_9 = import1.UNINITIALIZED;
        this._expr_10 = import1.UNINITIALIZED;
        this._expr_11 = import1.UNINITIALIZED;
        this._expr_12 = import1.UNINITIALIZED;
    }
    Wrapper_Range.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_Range.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy();
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_Range.prototype.check_color = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.color = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_Range.prototype.check_mode = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.mode = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_Range.prototype.check_min = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.min = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_Range.prototype.check_max = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.max = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_Range.prototype.check_step = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_4, currValue))) {
            this._changed = true;
            this.context.step = currValue;
            this._expr_4 = currValue;
        }
    };
    Wrapper_Range.prototype.check_snaps = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_5, currValue))) {
            this._changed = true;
            this.context.snaps = currValue;
            this._expr_5 = currValue;
        }
    };
    Wrapper_Range.prototype.check_pin = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_6, currValue))) {
            this._changed = true;
            this.context.pin = currValue;
            this._expr_6 = currValue;
        }
    };
    Wrapper_Range.prototype.check_debounce = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_7, currValue))) {
            this._changed = true;
            this.context.debounce = currValue;
            this._expr_7 = currValue;
        }
    };
    Wrapper_Range.prototype.check_dualKnobs = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_8, currValue))) {
            this._changed = true;
            this.context.dualKnobs = currValue;
            this._expr_8 = currValue;
        }
    };
    Wrapper_Range.prototype.check_disabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_9, currValue))) {
            this._changed = true;
            this.context.disabled = currValue;
            this._expr_9 = currValue;
        }
    };
    Wrapper_Range.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_Range.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_10 = this.context._disabled;
        if (import3.checkBinding(throwOnChange, this._expr_10, currVal_10)) {
            view.renderer.setElementClass(el, 'range-disabled', currVal_10);
            this._expr_10 = currVal_10;
        }
        var currVal_11 = this.context._pressed;
        if (import3.checkBinding(throwOnChange, this._expr_11, currVal_11)) {
            view.renderer.setElementClass(el, 'range-pressed', currVal_11);
            this._expr_11 = currVal_11;
        }
        var currVal_12 = this.context._pin;
        if (import3.checkBinding(throwOnChange, this._expr_12, currVal_12)) {
            view.renderer.setElementClass(el, 'range-has-pin', currVal_12);
            this._expr_12 = currVal_12;
        }
    };
    Wrapper_Range.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_Range.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.ionChange.subscribe(_eventHandler.bind(view, 'ionChange')));
        }
    };
    return Wrapper_Range;
}());
export var Wrapper_RangeKnob = (function () {
    function Wrapper_RangeKnob(p0) {
        this._changed = false;
        this.context = new import0.RangeKnob(p0);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
        this._expr_5 = import1.UNINITIALIZED;
        this._expr_6 = import1.UNINITIALIZED;
        this._expr_7 = import1.UNINITIALIZED;
    }
    Wrapper_RangeKnob.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_RangeKnob.prototype.ngOnDestroy = function () {
    };
    Wrapper_RangeKnob.prototype.check_upper = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.upper = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_RangeKnob.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_RangeKnob.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_1 = this.context.pressed;
        if (import3.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            view.renderer.setElementClass(el, 'range-knob-pressed', currVal_1);
            this._expr_1 = currVal_1;
        }
        var currVal_2 = (this.context._val === this.context.range.min);
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            view.renderer.setElementClass(el, 'range-knob-min', currVal_2);
            this._expr_2 = currVal_2;
        }
        var currVal_3 = (this.context._val === this.context.range.max);
        if (import3.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            view.renderer.setElementClass(el, 'range-knob-max', currVal_3);
            this._expr_3 = currVal_3;
        }
        var currVal_4 = this.context._x;
        if (import3.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            view.renderer.setElementStyle(el, 'left', ((view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_4) == null) ? null : view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_4).toString()));
            this._expr_4 = currVal_4;
        }
        var currVal_5 = this.context._val;
        if (import3.checkBinding(throwOnChange, this._expr_5, currVal_5)) {
            view.renderer.setElementAttribute(el, 'aria-valuenow', ((currVal_5 == null) ? null : currVal_5.toString()));
            this._expr_5 = currVal_5;
        }
        var currVal_6 = this.context.range.min;
        if (import3.checkBinding(throwOnChange, this._expr_6, currVal_6)) {
            view.renderer.setElementAttribute(el, 'aria-valuemin', ((currVal_6 == null) ? null : currVal_6.toString()));
            this._expr_6 = currVal_6;
        }
        var currVal_7 = this.context.range.max;
        if (import3.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            view.renderer.setElementAttribute(el, 'aria-valuemax', ((currVal_7 == null) ? null : currVal_7.toString()));
            this._expr_7 = currVal_7;
        }
    };
    Wrapper_RangeKnob.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_RangeKnob.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_RangeKnob;
}());
var renderType_Range_Host = import3.createRenderComponentType('', 0, import6.ViewEncapsulation.None, [], {});
var View_Range_Host0 = (function (_super) {
    __extends(View_Range_Host0, _super);
    function View_Range_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_Range_Host0, renderType_Range_Host, import7.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    Object.defineProperty(View_Range_Host0.prototype, "_NG_VALUE_ACCESSOR_0_4", {
        get: function () {
            if ((this.__NG_VALUE_ACCESSOR_0_4 == null)) {
                (this.__NG_VALUE_ACCESSOR_0_4 = [this._Range_0_3.context]);
            }
            return this.__NG_VALUE_ACCESSOR_0_4;
        },
        enumerable: true,
        configurable: true
    });
    View_Range_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ion-range', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_Range0(this.viewUtils, this, 0, this._el_0);
        this._Range_0_3 = new Wrapper_Range(this.injectorGet(import9.Form, this.parentIndex), this.injectorGet(import10.Haptic, this.parentIndex), this.injectorGet(import11.Item, this.parentIndex, null), this.injectorGet(import12.Config, this.parentIndex), new import13.ElementRef(this._el_0), this.renderer);
        this.compView_0.create(this._Range_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import8.ComponentRef_(0, this, this._el_0, this._Range_0_3.context);
    };
    View_Range_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.Range) && (0 === requestNodeIndex))) {
            return this._Range_0_3.context;
        }
        if (((token === import14.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_0_4;
        }
        return notFoundResult;
    };
    View_Range_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._Range_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._Range_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Range_0_3.context.ngAfterViewInit();
            }
        }
    };
    View_Range_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._Range_0_3.ngOnDestroy();
    };
    View_Range_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_Range_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 0) && (ngContentIndex == 1))) { }
    };
    return View_Range_Host0;
}(import2.AppView));
export var RangeNgFactory = new import8.ComponentFactory('ion-range', View_Range_Host0, import0.Range);
var styles_Range = [];
var renderType_Range = import3.createRenderComponentType('', 2, import6.ViewEncapsulation.None, styles_Range, {});
export var View_Range0 = (function (_super) {
    __extends(View_Range0, _super);
    function View_Range0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_Range0, renderType_Range, import7.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
        this._expr_17 = import1.UNINITIALIZED;
        this._expr_18 = import1.UNINITIALIZED;
    }
    View_Range0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._viewQuery_bar_0 = new import15.QueryList();
        this._viewQuery_slider_1 = new import15.QueryList();
        this._viewQuery_RangeKnob_2 = new import15.QueryList();
        this.projectNodes(parentRenderNode, 0);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'range-slider'), null);
        this._anchor_1 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_1 = new import16.ViewContainer(1, 0, this, this._anchor_1);
        this._TemplateRef_1_5 = new import19.TemplateRef_(this, 1, this._anchor_1);
        this._NgFor_1_6 = new import17.Wrapper_NgFor(this._vc_1.vcRef, this._TemplateRef_1_5, this.parentView.injectorGet(import20.IterableDiffers, this.parentIndex), this.ref);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'range-bar'), null);
        this._el_3 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'range-bar range-bar-active'), null);
        this._el_4 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray8(6, 'class', 'range-knob-handle', 'role', 'slider', 'tabindex', '0'), null);
        this.compView_4 = new View_RangeKnob0(this.viewUtils, this, 4, this._el_4);
        this._RangeKnob_4_3 = new Wrapper_RangeKnob(this.parentView.injectorGet(import0.Range, this.parentIndex));
        this.compView_4.create(this._RangeKnob_4_3.context);
        this._anchor_5 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_5 = new import16.ViewContainer(5, 0, this, this._anchor_5);
        this._TemplateRef_5_5 = new import19.TemplateRef_(this, 5, this._anchor_5);
        this._NgIf_5_6 = new import18.Wrapper_NgIf(this._vc_5.vcRef, this._TemplateRef_5_5);
        this.projectNodes(parentRenderNode, 1);
        this._viewQuery_bar_0.reset([new import13.ElementRef(this._el_3)]);
        this.context._bar = this._viewQuery_bar_0.first;
        this._viewQuery_slider_1.reset([new import13.ElementRef(this._el_0)]);
        this.context._slider = this._viewQuery_slider_1.first;
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._anchor_1,
            this._el_2,
            this._el_3,
            this._el_4,
            this._anchor_5
        ]), null);
        return null;
    };
    View_Range0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import19.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import21.NgFor) && (1 === requestNodeIndex))) {
            return this._NgFor_1_6.context;
        }
        if (((token === import0.RangeKnob) && (4 === requestNodeIndex))) {
            return this._RangeKnob_4_3.context;
        }
        if (((token === import19.TemplateRef) && (5 === requestNodeIndex))) {
            return this._TemplateRef_5_5;
        }
        if (((token === import22.NgIf) && (5 === requestNodeIndex))) {
            return this._NgIf_5_6.context;
        }
        return notFoundResult;
    };
    View_Range0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1_0_0 = this.context._ticks;
        this._NgFor_1_6.check_ngForOf(currVal_1_0_0, throwOnChange, false);
        this._NgFor_1_6.ngDoCheck(this, this._anchor_1, throwOnChange);
        this._RangeKnob_4_3.ngDoCheck(this, this._el_4, throwOnChange);
        var currVal_5_0_0 = this.context._dual;
        this._NgIf_5_6.check_ngIf(currVal_5_0_0, throwOnChange, false);
        this._NgIf_5_6.ngDoCheck(this, this._anchor_5, throwOnChange);
        this._vc_1.detectChangesInNestedViews(throwOnChange);
        this._vc_5.detectChangesInNestedViews(throwOnChange);
        var currVal_17 = this.context._barL;
        if (import3.checkBinding(throwOnChange, this._expr_17, currVal_17)) {
            this.renderer.setElementStyle(this._el_3, 'left', ((this.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_17) == null) ? null : this.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_17).toString()));
            this._expr_17 = currVal_17;
        }
        var currVal_18 = this.context._barR;
        if (import3.checkBinding(throwOnChange, this._expr_18, currVal_18)) {
            this.renderer.setElementStyle(this._el_3, 'right', ((this.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_18) == null) ? null : this.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_18).toString()));
            this._expr_18 = currVal_18;
        }
        this._RangeKnob_4_3.checkHost(this, this.compView_4, this._el_4, throwOnChange);
        this.compView_4.detectChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._viewQuery_RangeKnob_2.dirty) {
                this._viewQuery_RangeKnob_2.reset([
                    this._RangeKnob_4_3.context,
                    this._vc_5.mapNestedViews(View_Range2, function (nestedView) {
                        return [nestedView._RangeKnob_0_3.context];
                    })
                ]);
                this.context._knobs = this._viewQuery_RangeKnob_2;
                this._viewQuery_RangeKnob_2.notifyOnChanges();
            }
        }
    };
    View_Range0.prototype.destroyInternal = function () {
        this._vc_1.destroyNestedViews();
        this._vc_5.destroyNestedViews();
        this.compView_4.destroy();
    };
    View_Range0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 1)) {
            return new View_Range1(this.viewUtils, this, 1, this._anchor_1, this._vc_1);
        }
        if ((nodeIndex == 5)) {
            return new View_Range2(this.viewUtils, this, 5, this._anchor_5, this._vc_5);
        }
        return null;
    };
    return View_Range0;
}(import2.AppView));
var View_Range1 = (function (_super) {
    __extends(View_Range1, _super);
    function View_Range1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_Range1, renderType_Range, import7.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
    }
    View_Range1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', new import3.InlineArray2(2, 'class', 'range-tick'), null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    };
    View_Range1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1 = this.context.$implicit.left;
        if (import3.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementStyle(this._el_0, 'left', ((this.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_1) == null) ? null : this.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE, currVal_1).toString()));
            this._expr_1 = currVal_1;
        }
        var currVal_2 = this.context.$implicit.active;
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementClass(this._el_0, 'range-tick-active', currVal_2);
            this._expr_2 = currVal_2;
        }
    };
    View_Range1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_Range1;
}(import2.AppView));
var View_Range2 = (function (_super) {
    __extends(View_Range2, _super);
    function View_Range2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_Range2, renderType_Range, import7.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_Range2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', new import3.InlineArray8(6, 'class', 'range-knob-handle', 'role', 'slider', 'tabindex', '0'), null);
        this.compView_0 = new View_RangeKnob0(this.viewUtils, this, 0, this._el_0);
        this._RangeKnob_0_3 = new Wrapper_RangeKnob(this.parentView.parentView.injectorGet(import0.Range, this.parentView.parentIndex));
        this.compView_0.create(this._RangeKnob_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    };
    View_Range2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.RangeKnob) && (0 === requestNodeIndex))) {
            return this._RangeKnob_0_3.context;
        }
        return notFoundResult;
    };
    View_Range2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = true;
        this._RangeKnob_0_3.check_upper(currVal_0_0_0, throwOnChange, false);
        this._RangeKnob_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._RangeKnob_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_Range2.prototype.dirtyParentQueriesInternal = function () {
        this.parentView._viewQuery_RangeKnob_2.setDirty();
    };
    View_Range2.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_Range2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_Range2;
}(import2.AppView));
var renderType_RangeKnob_Host = import3.createRenderComponentType('', 0, import6.ViewEncapsulation.None, [], {});
var View_RangeKnob_Host0 = (function (_super) {
    __extends(View_RangeKnob_Host0, _super);
    function View_RangeKnob_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_RangeKnob_Host0, renderType_RangeKnob_Host, import7.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_RangeKnob_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'div', new import3.InlineArray8(6, 'class', 'range-knob-handle', 'role', 'slider', 'tabindex', '0'), rootSelector, null);
        this.compView_0 = new View_RangeKnob0(this.viewUtils, this, 0, this._el_0);
        this._RangeKnob_0_3 = new Wrapper_RangeKnob(this.injectorGet(import0.Range, this.parentIndex));
        this.compView_0.create(this._RangeKnob_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import8.ComponentRef_(0, this, this._el_0, this._RangeKnob_0_3.context);
    };
    View_RangeKnob_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.RangeKnob) && (0 === requestNodeIndex))) {
            return this._RangeKnob_0_3.context;
        }
        return notFoundResult;
    };
    View_RangeKnob_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._RangeKnob_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._RangeKnob_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_RangeKnob_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_RangeKnob_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_RangeKnob_Host0;
}(import2.AppView));
export var RangeKnobNgFactory = new import8.ComponentFactory('.range-knob-handle', View_RangeKnob_Host0, import0.RangeKnob);
var styles_RangeKnob = [];
var renderType_RangeKnob = import3.createRenderComponentType('', 0, import6.ViewEncapsulation.None, styles_RangeKnob, {});
export var View_RangeKnob0 = (function (_super) {
    __extends(View_RangeKnob0, _super);
    function View_RangeKnob0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_RangeKnob0, renderType_RangeKnob, import7.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_RangeKnob0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._vc_0 = new import16.ViewContainer(0, null, this, this._anchor_0);
        this._TemplateRef_0_5 = new import19.TemplateRef_(this, 0, this._anchor_0);
        this._NgIf_0_6 = new import18.Wrapper_NgIf(this._vc_0.vcRef, this._TemplateRef_0_5);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'range-knob'), null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._anchor_0,
            this._el_1
        ]), null);
        return null;
    };
    View_RangeKnob0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import19.TemplateRef) && (0 === requestNodeIndex))) {
            return this._TemplateRef_0_5;
        }
        if (((token === import22.NgIf) && (0 === requestNodeIndex))) {
            return this._NgIf_0_6.context;
        }
        return notFoundResult;
    };
    View_RangeKnob0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.context.range.pin;
        this._NgIf_0_6.check_ngIf(currVal_0_0_0, throwOnChange, false);
        this._NgIf_0_6.ngDoCheck(this, this._anchor_0, throwOnChange);
        this._vc_0.detectChangesInNestedViews(throwOnChange);
    };
    View_RangeKnob0.prototype.destroyInternal = function () {
        this._vc_0.destroyNestedViews();
    };
    View_RangeKnob0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 0)) {
            return new View_RangeKnob1(this.viewUtils, this, 0, this._anchor_0, this._vc_0);
        }
        return null;
    };
    return View_RangeKnob0;
}(import2.AppView));
var View_RangeKnob1 = (function (_super) {
    __extends(View_RangeKnob1, _super);
    function View_RangeKnob1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_RangeKnob1, renderType_RangeKnob, import7.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_2 = import1.UNINITIALIZED;
    }
    View_RangeKnob1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', new import3.InlineArray2(2, 'class', 'range-pin'), null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_RangeKnob1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2 = import3.inlineInterpolate(1, '', this.parentView.context._val, '');
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setText(this._text_1, currVal_2);
            this._expr_2 = currVal_2;
        }
    };
    View_RangeKnob1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_RangeKnob1;
}(import2.AppView));
//# sourceMappingURL=range.ngfactory.js.map