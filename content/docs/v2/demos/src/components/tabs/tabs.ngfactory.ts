/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './tabs';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../navigation/nav-controller';
import * as import9 from '../../navigation/view-controller';
import * as import10 from '../app/app';
import * as import11 from '../../config/config';
import * as import12 from '@angular/core/src/linker/element_ref';
import * as import13 from '../../platform/platform';
import * as import14 from '../../navigation/deep-linker';
import * as import15 from '@angular/core/src/linker/query_list';
import * as import16 from '@angular/core/src/linker/view_container';
import * as import17 from '../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import18 from './tab-highlight.ngfactory';
import * as import19 from '@angular/core/src/linker/template_ref';
import * as import20 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import21 from '@angular/common/src/directives/ng_for';
import * as import22 from './tab-highlight';
import * as import23 from './tab-button.ngfactory';
import * as import24 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import25 from '@angular/common/src/directives/ng_if';
import * as import26 from './tab-button';
import * as import27 from '../icon/icon.ngfactory';
import * as import28 from '../icon/icon';
import * as import29 from '../badge/badge.ngfactory';
import * as import30 from '../badge/badge';
export class Wrapper_Tabs {
  /*private*/ _eventHandler:Function;
  context:import0.Tabs;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  subscription0:any;
  constructor(p0:any,p1:any,p2:any,p3:any,p4:any,p5:any,p6:any,p7:any) {
    this._changed = false;
    this.context = new import0.Tabs(p0,p1,p2,p3,p4,p5,p6,p7);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_color(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.color = currValue;
      this._expr_0 = currValue;
    }
  }
  check_mode(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.mode = currValue;
      this._expr_1 = currValue;
    }
  }
  check_selectedIndex(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.selectedIndex = currValue;
      this._expr_2 = currValue;
    }
  }
  check_tabsLayout(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.tabsLayout = currValue;
      this._expr_3 = currValue;
    }
  }
  check_tabsPlacement(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.tabsPlacement = currValue;
      this._expr_4 = currValue;
    }
  }
  check_tabsHighlight(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.tabsHighlight = currValue;
      this._expr_5 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.ionChange.subscribe(_eventHandler.bind(view,'ionChange'))); }
  }
}
var renderType_Tabs_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_Tabs_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.Tabs>;
  _Tabs_0_3:Wrapper_Tabs;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_Tabs_Host0,renderType_Tabs_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'ion-tabs',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_Tabs0(this.viewUtils,this,0,this._el_0);
    this._Tabs_0_3 = new Wrapper_Tabs(this.injectorGet(import8.NavController,this.parentIndex,(null as any)),this.injectorGet(import9.ViewController,this.parentIndex,(null as any)),this.injectorGet(import10.App,this.parentIndex),this.injectorGet(import11.Config,this.parentIndex),new import12.ElementRef(this._el_0),this.injectorGet(import13.Platform,this.parentIndex),this.renderer,this.injectorGet(import14.DeepLinker,this.parentIndex));
    this.compView_0.create(this._Tabs_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._Tabs_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.Tabs) && (0 === requestNodeIndex))) { return this._Tabs_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._Tabs_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._Tabs_0_3.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._Tabs_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const TabsNgFactory:import7.ComponentFactory<import0.Tabs> = new import7.ComponentFactory<import0.Tabs>('ion-tabs',View_Tabs_Host0,import0.Tabs);
const styles_Tabs:any[] = ([] as any[]);
var renderType_Tabs:import4.RenderComponentType = import3.createRenderComponentType('',1,import5.ViewEncapsulation.None,styles_Tabs,{});
export class View_Tabs0 extends import2.AppView<import0.Tabs> {
  _viewQuery_TabHighlight_0:import15.QueryList<any>;
  _viewQuery_tabbar_1:import15.QueryList<any>;
  _viewQuery_portal_2:import15.QueryList<any>;
  _el_0:any;
  _anchor_1:any;
  /*private*/ _vc_1:import16.ViewContainer;
  _TemplateRef_1_5:any;
  _NgFor_1_6:import17.Wrapper_NgFor;
  _el_2:any;
  _TabHighlight_2_3:import18.Wrapper_TabHighlight;
  _el_3:any;
  /*private*/ _vc_3:import16.ViewContainer;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_Tabs0,renderType_Tabs,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_TabHighlight_0 = new import15.QueryList<any>();
    this._viewQuery_tabbar_1 = new import15.QueryList<any>();
    this._viewQuery_portal_2 = new import15.QueryList<any>();
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray4(4,'class','tabbar','role','tablist'),(null as any));
    this._anchor_1 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_1 = new import16.ViewContainer(1,0,this,this._anchor_1);
    this._TemplateRef_1_5 = new import19.TemplateRef_(this,1,this._anchor_1);
    this._NgFor_1_6 = new import17.Wrapper_NgFor(this._vc_1.vcRef,this._TemplateRef_1_5,this.parentView.injectorGet(import20.IterableDiffers,this.parentIndex),this.ref);
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','tab-highlight'),(null as any));
    this._TabHighlight_2_3 = new import18.Wrapper_TabHighlight(new import12.ElementRef(this._el_2));
    this.projectNodes(parentRenderNode,0);
    this._el_3 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'tab-portal',''),(null as any));
    this._vc_3 = new import16.ViewContainer(3,(null as any),this,this._el_3);
    this._viewQuery_TabHighlight_0.reset([this._TabHighlight_2_3.context]);
    this.context._highlight = this._viewQuery_TabHighlight_0.first;
    this._viewQuery_tabbar_1.reset([new import12.ElementRef(this._el_0)]);
    this.context._tabbar = this._viewQuery_tabbar_1.first;
    this._viewQuery_portal_2.reset([this._vc_3.vcRef]);
    this.context.portal = this._viewQuery_portal_2.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._anchor_1,
      this._el_2,
      this._el_3
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import21.NgFor) && (1 === requestNodeIndex))) { return this._NgFor_1_6.context; }
    if (((token === import22.TabHighlight) && (2 === requestNodeIndex))) { return this._TabHighlight_2_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context._tabs;
    this._NgFor_1_6.check_ngForOf(currVal_1_0_0,throwOnChange,false);
    this._NgFor_1_6.ngDoCheck(this,this._anchor_1,throwOnChange);
    this._TabHighlight_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
    this._vc_3.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 1)) { return new View_Tabs1(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    return (null as any);
  }
}
class View_Tabs1 extends import2.AppView<any> {
  _el_0:any;
  _TabButton_0_3:import23.Wrapper_TabButton;
  _anchor_1:any;
  /*private*/ _vc_1:import16.ViewContainer;
  _TemplateRef_1_5:any;
  _NgIf_1_6:import24.Wrapper_NgIf;
  _anchor_2:any;
  /*private*/ _vc_2:import16.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import24.Wrapper_NgIf;
  _anchor_3:any;
  /*private*/ _vc_3:import16.ViewContainer;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import24.Wrapper_NgIf;
  _el_4:any;
  /*private*/ _expr_15:any;
  /*private*/ _expr_16:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_Tabs1,renderType_Tabs,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_15 = import1.UNINITIALIZED;
    this._expr_16 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'a',new import3.InlineArray8(6,'class','tab-button','href','#','role','tab'),(null as any));
    this._TabButton_0_3 = new import23.Wrapper_TabButton(this.parentView.parentView.injectorGet(import11.Config,this.parentView.parentIndex),new import12.ElementRef(this._el_0),this.renderer);
    this._anchor_1 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_1 = new import16.ViewContainer(1,0,this,this._anchor_1);
    this._TemplateRef_1_5 = new import19.TemplateRef_(this,1,this._anchor_1);
    this._NgIf_1_6 = new import24.Wrapper_NgIf(this._vc_1.vcRef,this._TemplateRef_1_5);
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_2 = new import16.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import19.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import24.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_3 = new import16.ViewContainer(3,0,this,this._anchor_3);
    this._TemplateRef_3_5 = new import19.TemplateRef_(this,3,this._anchor_3);
    this._NgIf_3_6 = new import24.Wrapper_NgIf(this._vc_3.vcRef,this._TemplateRef_3_5);
    this._el_4 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','button-effect'),(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray4(4,'ionSelect',(null as any),'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this._TabButton_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._anchor_1,
      this._anchor_2,
      this._anchor_3,
      this._el_4
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import25.NgIf) && (1 === requestNodeIndex))) { return this._NgIf_1_6.context; }
    if (((token === import19.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import25.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    if (((token === import19.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import25.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    if (((token === import26.TabButton) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._TabButton_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.$implicit;
    this._TabButton_0_3.check_tab(currVal_0_0_0,throwOnChange,false);
    this._TabButton_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_1_0_0:any = this.context.$implicit.tabIcon;
    this._NgIf_1_6.check_ngIf(currVal_1_0_0,throwOnChange,false);
    this._NgIf_1_6.ngDoCheck(this,this._anchor_1,throwOnChange);
    const currVal_2_0_0:any = this.context.$implicit.tabTitle;
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    const currVal_3_0_0:any = this.context.$implicit.tabBadge;
    this._NgIf_3_6.check_ngIf(currVal_3_0_0,throwOnChange,false);
    this._NgIf_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    const currVal_15:boolean = !this.context.$implicit.enabled;
    if (import3.checkBinding(throwOnChange,this._expr_15,currVal_15)) {
      this.renderer.setElementClass(this._el_0,'tab-disabled',currVal_15);
      this._expr_15 = currVal_15;
    }
    const currVal_16:boolean = !this.context.$implicit.show;
    if (import3.checkBinding(throwOnChange,this._expr_16,currVal_16)) {
      this.renderer.setElementClass(this._el_0,'tab-hidden',currVal_16);
      this._expr_16 = currVal_16;
    }
    this._TabButton_0_3.checkHost(this,this,this._el_0,throwOnChange);
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
    this._vc_2.destroyNestedViews();
    this._vc_3.destroyNestedViews();
    this._TabButton_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 1)) { return new View_Tabs2(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    if ((nodeIndex == 2)) { return new View_Tabs3(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    if ((nodeIndex == 3)) { return new View_Tabs4(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._TabButton_0_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ionSelect')) {
      const pd_sub_0:any = ((<any>this.parentView.context.select($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_Tabs2 extends import2.AppView<any> {
  _el_0:any;
  _Icon_0_3:import27.Wrapper_Icon;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_Tabs2,renderType_Tabs,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'ion-icon',new import3.InlineArray4(4,'class','tab-button-icon','role','img'),(null as any));
    this._Icon_0_3 = new import27.Wrapper_Icon(this.parentView.parentView.parentView.injectorGet(import11.Config,this.parentView.parentView.parentIndex),new import12.ElementRef(this._el_0),this.renderer);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import28.Icon) && (0 === requestNodeIndex))) { return this._Icon_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.context.$implicit.tabIcon;
    this._Icon_0_3.check_name(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parentView.context.$implicit.isSelected;
    this._Icon_0_3.check_isActive(currVal_0_0_1,throwOnChange,false);
    this._Icon_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._Icon_0_3.checkHost(this,this,this._el_0,throwOnChange);
  }
  destroyInternal():void {
    this._Icon_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_Tabs3 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_Tabs3,renderType_Tabs,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_2 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',new import3.InlineArray2(2,'class','tab-button-text'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2:any = import3.inlineInterpolate(1,'',this.parentView.context.$implicit.tabTitle,'');
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setText(this._text_1,currVal_2);
      this._expr_2 = currVal_2;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_Tabs4 extends import2.AppView<any> {
  _el_0:any;
  _Badge_0_3:import29.Wrapper_Badge;
  _text_1:any;
  /*private*/ _expr_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_Tabs4,renderType_Tabs,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_3 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'ion-badge',new import3.InlineArray2(2,'class','tab-badge'),(null as any));
    this._Badge_0_3 = new import29.Wrapper_Badge(this.parentView.parentView.parentView.injectorGet(import11.Config,this.parentView.parentView.parentIndex),new import12.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import30.Badge) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._Badge_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.context.$implicit.tabBadgeStyle;
    this._Badge_0_3.check_color(currVal_0_0_0,throwOnChange,false);
    this._Badge_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_3:any = import3.inlineInterpolate(1,'',this.parentView.context.$implicit.tabBadge,'');
    if (import3.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setText(this._text_1,currVal_3);
      this._expr_3 = currVal_3;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}