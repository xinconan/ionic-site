/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './item-reorder';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from './item';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '../icon/icon.ngfactory';
import * as import11 from '../../config/config';
import * as import12 from '../icon/icon';
export var Wrapper_ItemReorder = (function () {
    function Wrapper_ItemReorder(p0, p1, p2, p3) {
        this._changed = false;
        this.context = new import0.ItemReorder(p0, p1, p2, p3);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
    }
    Wrapper_ItemReorder.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ItemReorder.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy();
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_ItemReorder.prototype.check_reorder = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.reorder = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_ItemReorder.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_ItemReorder.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_1 = this.context._enableReorder;
        if (import3.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            view.renderer.setElementClass(el, 'reorder-enabled', currVal_1);
            this._expr_1 = currVal_1;
        }
        var currVal_2 = this.context._visibleReorder;
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            view.renderer.setElementClass(el, 'reorder-visible', currVal_2);
            this._expr_2 = currVal_2;
        }
    };
    Wrapper_ItemReorder.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_ItemReorder.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.ionItemReorder.subscribe(_eventHandler.bind(view, 'ionItemReorder')));
        }
    };
    return Wrapper_ItemReorder;
}());
export var Wrapper_Reorder = (function () {
    function Wrapper_Reorder(p0, p1) {
        this._changed = false;
        this.context = new import0.Reorder(p0, p1);
    }
    Wrapper_Reorder.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_Reorder.prototype.ngOnDestroy = function () {
    };
    Wrapper_Reorder.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_Reorder.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_Reorder.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.onClick($event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    Wrapper_Reorder.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_Reorder;
}());
var renderType_Reorder_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_Reorder_Host0 = (function (_super) {
    __extends(View_Reorder_Host0, _super);
    function View_Reorder_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_Reorder_Host0, renderType_Reorder_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_Reorder_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ion-reorder', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_Reorder0(this.viewUtils, this, 0, this._el_0);
        this._Reorder_0_3 = new Wrapper_Reorder(this.injectorGet(import8.Item, this.parentIndex), new import9.ElementRef(this._el_0));
        this.compView_0.create(this._Reorder_0_3.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), [disposable_0]);
        return new import7.ComponentRef_(0, this, this._el_0, this._Reorder_0_3.context);
    };
    View_Reorder_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.Reorder) && (0 === requestNodeIndex))) {
            return this._Reorder_0_3.context;
        }
        return notFoundResult;
    };
    View_Reorder_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._Reorder_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_Reorder_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_Reorder_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_Reorder_Host0.prototype.handleEvent_0 = function (eventName, $event) {
        this.compView_0.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._Reorder_0_3.handleEvent(eventName, $event) && result);
        return result;
    };
    return View_Reorder_Host0;
}(import2.AppView));
export var ReorderNgFactory = new import7.ComponentFactory('ion-reorder', View_Reorder_Host0, import0.Reorder);
var styles_Reorder = [];
var renderType_Reorder = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, styles_Reorder, {});
export var View_Reorder0 = (function (_super) {
    __extends(View_Reorder0, _super);
    function View_Reorder0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_Reorder0, renderType_Reorder, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_Reorder0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'ion-icon', new import3.InlineArray4(4, 'name', 'reorder', 'role', 'img'), null);
        this._Icon_0_3 = new import10.Wrapper_Icon(this.parentView.injectorGet(import11.Config, this.parentIndex), new import9.ElementRef(this._el_0), this.renderer);
        this.init(null, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    };
    View_Reorder0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import12.Icon) && (0 === requestNodeIndex))) {
            return this._Icon_0_3.context;
        }
        return notFoundResult;
    };
    View_Reorder0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = 'reorder';
        this._Icon_0_3.check_name(currVal_0_0_0, throwOnChange, false);
        this._Icon_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._Icon_0_3.checkHost(this, this, this._el_0, throwOnChange);
    };
    View_Reorder0.prototype.destroyInternal = function () {
        this._Icon_0_3.ngOnDestroy();
    };
    return View_Reorder0;
}(import2.AppView));
//# sourceMappingURL=item-reorder.ngfactory.js.map