/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './item-sliding';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/query_list';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../list/list';
import * as import10 from '@angular/core/src/linker/element_ref';
import * as import11 from '@angular/core/src/zone/ng_zone';
export class Wrapper_ItemOptions {
  /*private*/ _eventHandler:Function;
  context:import0.ItemOptions;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  subscription0:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.ItemOptions(p0,p1);
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_side(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.side = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.ionSwipe.subscribe(_eventHandler.bind(view,'ionSwipe'))); }
  }
}
export class Wrapper_ItemSliding {
  /*private*/ _eventHandler:Function;
  context:import0.ItemSliding;
  /*private*/ _changed:boolean;
  subscription0:any;
  constructor(p0:any,p1:any,p2:any,p3:any) {
    this._changed = false;
    this.context = new import0.ItemSliding(p0,p1,p2,p3);
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.ionDrag.subscribe(_eventHandler.bind(view,'ionDrag'))); }
  }
}
var renderType_ItemSliding_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_ItemSliding_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.ItemSliding>;
  _ItemSliding_0_3:Wrapper_ItemSliding;
  _query_Item_0_0:import6.QueryList<any>;
  _query_ItemOptions_0_1:import6.QueryList<any>;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ItemSliding_Host0,renderType_ItemSliding_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'ion-item-sliding',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_ItemSliding0(this.viewUtils,this,0,this._el_0);
    this._ItemSliding_0_3 = new Wrapper_ItemSliding(this.injectorGet(import9.List,this.parentIndex,(null as any)),this.renderer,new import10.ElementRef(this._el_0),this.injectorGet(import11.NgZone,this.parentIndex));
    this._query_Item_0_0 = new import6.QueryList<any>();
    this._query_ItemOptions_0_1 = new import6.QueryList<any>();
    this._query_Item_0_0.reset(([] as any[]));
    this._ItemSliding_0_3.context.item = this._query_Item_0_0.first;
    this.compView_0.create(this._ItemSliding_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._ItemSliding_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ItemSliding) && (0 === requestNodeIndex))) { return this._ItemSliding_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._ItemSliding_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    if (!throwOnChange) { if (this._query_ItemOptions_0_1.dirty) {
      this._query_ItemOptions_0_1.reset(([] as any[]));
      this._ItemSliding_0_3.context._itemOptions = this._query_ItemOptions_0_1;
      this._query_ItemOptions_0_1.notifyOnChanges();
    } }
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._ItemSliding_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 1))) {  }
  }
}
export const ItemSlidingNgFactory:import8.ComponentFactory<import0.ItemSliding> = new import8.ComponentFactory<import0.ItemSliding>('ion-item-sliding',View_ItemSliding_Host0,import0.ItemSliding);
const styles_ItemSliding:any[] = ([] as any[]);
var renderType_ItemSliding:import4.RenderComponentType = import3.createRenderComponentType('',2,import5.ViewEncapsulation.None,styles_ItemSliding,{});
export class View_ItemSliding0 extends import2.AppView<import0.ItemSliding> {
  _text_0:any;
  _text_1:any;
  _text_2:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ItemSliding0,renderType_ItemSliding,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckOnce);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this.projectNodes(parentRenderNode,0);
    this._text_1 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this.projectNodes(parentRenderNode,1);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._text_1,
      this._text_2
    ]
    ),(null as any));
    return (null as any);
  }
}