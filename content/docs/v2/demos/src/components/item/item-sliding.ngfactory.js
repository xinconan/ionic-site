/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './item-sliding';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/query_list';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../list/list';
import * as import10 from '@angular/core/src/linker/element_ref';
import * as import11 from '@angular/core/src/zone/ng_zone';
export var Wrapper_ItemOptions = (function () {
    function Wrapper_ItemOptions(p0, p1) {
        this._changed = false;
        this.context = new import0.ItemOptions(p0, p1);
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_ItemOptions.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ItemOptions.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_ItemOptions.prototype.check_side = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.side = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_ItemOptions.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_ItemOptions.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_ItemOptions.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_ItemOptions.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.ionSwipe.subscribe(_eventHandler.bind(view, 'ionSwipe')));
        }
    };
    return Wrapper_ItemOptions;
}());
export var Wrapper_ItemSliding = (function () {
    function Wrapper_ItemSliding(p0, p1, p2, p3) {
        this._changed = false;
        this.context = new import0.ItemSliding(p0, p1, p2, p3);
    }
    Wrapper_ItemSliding.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ItemSliding.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_ItemSliding.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_ItemSliding.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_ItemSliding.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_ItemSliding.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.ionDrag.subscribe(_eventHandler.bind(view, 'ionDrag')));
        }
    };
    return Wrapper_ItemSliding;
}());
var renderType_ItemSliding_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_ItemSliding_Host0 = (function (_super) {
    __extends(View_ItemSliding_Host0, _super);
    function View_ItemSliding_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ItemSliding_Host0, renderType_ItemSliding_Host, import7.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_ItemSliding_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ion-item-sliding', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_ItemSliding0(this.viewUtils, this, 0, this._el_0);
        this._ItemSliding_0_3 = new Wrapper_ItemSliding(this.injectorGet(import9.List, this.parentIndex, null), this.renderer, new import10.ElementRef(this._el_0), this.injectorGet(import11.NgZone, this.parentIndex));
        this._query_Item_0_0 = new import6.QueryList();
        this._query_ItemOptions_0_1 = new import6.QueryList();
        this._query_Item_0_0.reset([]);
        this._ItemSliding_0_3.context.item = this._query_Item_0_0.first;
        this.compView_0.create(this._ItemSliding_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import8.ComponentRef_(0, this, this._el_0, this._ItemSliding_0_3.context);
    };
    View_ItemSliding_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.ItemSliding) && (0 === requestNodeIndex))) {
            return this._ItemSliding_0_3.context;
        }
        return notFoundResult;
    };
    View_ItemSliding_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._ItemSliding_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        if (!throwOnChange) {
            if (this._query_ItemOptions_0_1.dirty) {
                this._query_ItemOptions_0_1.reset([]);
                this._ItemSliding_0_3.context._itemOptions = this._query_ItemOptions_0_1;
                this._query_ItemOptions_0_1.notifyOnChanges();
            }
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_ItemSliding_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._ItemSliding_0_3.ngOnDestroy();
    };
    View_ItemSliding_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_ItemSliding_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 0) && (ngContentIndex == 1))) { }
    };
    return View_ItemSliding_Host0;
}(import2.AppView));
export var ItemSlidingNgFactory = new import8.ComponentFactory('ion-item-sliding', View_ItemSliding_Host0, import0.ItemSliding);
var styles_ItemSliding = [];
var renderType_ItemSliding = import3.createRenderComponentType('', 2, import5.ViewEncapsulation.None, styles_ItemSliding, {});
export var View_ItemSliding0 = (function (_super) {
    __extends(View_ItemSliding0, _super);
    function View_ItemSliding0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ItemSliding0, renderType_ItemSliding, import7.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckOnce);
    }
    View_ItemSliding0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this.projectNodes(parentRenderNode, 0);
        this._text_1 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this.projectNodes(parentRenderNode, 1);
        this._text_2 = this.renderer.createText(parentRenderNode, '\n  ', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._text_1,
            this._text_2
        ]), null);
        return null;
    };
    return View_ItemSliding0;
}(import2.AppView));
//# sourceMappingURL=item-sliding.ngfactory.js.map