/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './menu';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/query_list';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from './menu-controller';
import * as import10 from '@angular/core/src/linker/element_ref';
import * as import11 from '../../config/config';
import * as import12 from '../../platform/platform';
import * as import13 from '../../util/keyboard';
import * as import14 from '@angular/core/src/zone/ng_zone';
import * as import15 from '../../gestures/gesture-controller';
import * as import16 from '../../util/dom-controller';
import * as import17 from '../app/app';
import * as import18 from '../backdrop/backdrop.ngfactory';
import * as import19 from '../backdrop/backdrop';
export var Wrapper_Menu = (function () {
    function Wrapper_Menu(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
        this._changed = false;
        this.context = new import0.Menu(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
        this._expr_5 = import1.UNINITIALIZED;
        this._expr_6 = import1.UNINITIALIZED;
        this._expr_7 = import1.UNINITIALIZED;
    }
    Wrapper_Menu.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_Menu.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy();
        (this.subscription0 && this.subscription0.unsubscribe());
        (this.subscription1 && this.subscription1.unsubscribe());
        (this.subscription2 && this.subscription2.unsubscribe());
    };
    Wrapper_Menu.prototype.check_content = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.content = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_Menu.prototype.check_id = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.id = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_Menu.prototype.check_side = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.side = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_Menu.prototype.check_type = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.type = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_Menu.prototype.check_enabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_4, currValue))) {
            this._changed = true;
            this.context.enabled = currValue;
            this._expr_4 = currValue;
        }
    };
    Wrapper_Menu.prototype.check_swipeEnabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_5, currValue))) {
            this._changed = true;
            this.context.swipeEnabled = currValue;
            this._expr_5 = currValue;
        }
    };
    Wrapper_Menu.prototype.check_persistent = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_6, currValue))) {
            this._changed = true;
            this.context.persistent = currValue;
            this._expr_6 = currValue;
        }
    };
    Wrapper_Menu.prototype.check_maxEdgeStart = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_7, currValue))) {
            this._changed = true;
            this.context.maxEdgeStart = currValue;
            this._expr_7 = currValue;
        }
    };
    Wrapper_Menu.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_Menu.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_Menu.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_Menu.prototype.subscribe = function (view, _eventHandler, emit0, emit1, emit2) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.ionDrag.subscribe(_eventHandler.bind(view, 'ionDrag')));
        }
        if (emit1) {
            (this.subscription1 = this.context.ionOpen.subscribe(_eventHandler.bind(view, 'ionOpen')));
        }
        if (emit2) {
            (this.subscription2 = this.context.ionClose.subscribe(_eventHandler.bind(view, 'ionClose')));
        }
    };
    return Wrapper_Menu;
}());
var renderType_Menu_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_Menu_Host0 = (function (_super) {
    __extends(View_Menu_Host0, _super);
    function View_Menu_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_Menu_Host0, renderType_Menu_Host, import7.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_Menu_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ion-menu', new import3.InlineArray2(2, 'role', 'navigation'), rootSelector, null);
        this.compView_0 = new View_Menu0(this.viewUtils, this, 0, this._el_0);
        this._Menu_0_3 = new Wrapper_Menu(this.injectorGet(import9.MenuController, this.parentIndex), new import10.ElementRef(this._el_0), this.injectorGet(import11.Config, this.parentIndex), this.injectorGet(import12.Platform, this.parentIndex), this.renderer, this.injectorGet(import13.Keyboard, this.parentIndex), this.injectorGet(import14.NgZone, this.parentIndex), this.injectorGet(import15.GestureController, this.parentIndex), this.injectorGet(import16.DomController, this.parentIndex), this.injectorGet(import17.App, this.parentIndex));
        this._query_Content_0_0 = new import6.QueryList();
        this._query_Content_0_0.reset([]);
        this._Menu_0_3.context.menuContent = this._query_Content_0_0.first;
        this.compView_0.create(this._Menu_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import8.ComponentRef_(0, this, this._el_0, this._Menu_0_3.context);
    };
    View_Menu_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.Menu) && (0 === requestNodeIndex))) {
            return this._Menu_0_3.context;
        }
        return notFoundResult;
    };
    View_Menu_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._Menu_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_Menu_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._Menu_0_3.ngOnDestroy();
    };
    View_Menu_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_Menu_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
    };
    return View_Menu_Host0;
}(import2.AppView));
export var MenuNgFactory = new import8.ComponentFactory('ion-menu', View_Menu_Host0, import0.Menu);
var styles_Menu = [];
var renderType_Menu = import3.createRenderComponentType('', 1, import5.ViewEncapsulation.None, styles_Menu, {});
export var View_Menu0 = (function (_super) {
    __extends(View_Menu0, _super);
    function View_Menu0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_Menu0, renderType_Menu, import7.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckOnce);
    }
    View_Menu0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._viewQuery_Backdrop_0 = new import6.QueryList();
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'menu-inner'), null);
        this.projectNodes(this._el_0, 0);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'ion-backdrop', new import3.InlineArray8(6, 'disable-activated', '', 'role', 'presentation', 'tappable', ''), null);
        this._Backdrop_1_3 = new import18.Wrapper_Backdrop(new import10.ElementRef(this._el_1), this.renderer);
        this._viewQuery_Backdrop_0.reset([this._Backdrop_1_3.context]);
        this.context.backdrop = this._viewQuery_Backdrop_0.first;
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._el_1
        ]), null);
        return null;
    };
    View_Menu0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import19.Backdrop) && (1 === requestNodeIndex))) {
            return this._Backdrop_1_3.context;
        }
        return notFoundResult;
    };
    View_Menu0.prototype.detectChangesInternal = function (throwOnChange) {
        this._Backdrop_1_3.ngDoCheck(this, this._el_1, throwOnChange);
    };
    return View_Menu0;
}(import2.AppView));
//# sourceMappingURL=menu.ngfactory.js.map