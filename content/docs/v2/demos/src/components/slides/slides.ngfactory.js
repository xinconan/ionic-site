/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './slides';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/linker/element_ref';
import * as import9 from '../../config/config';
export var Wrapper_Slide = (function () {
    function Wrapper_Slide(p0, p1) {
        this._changed = false;
        this.context = new import0.Slide(p0, p1);
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_Slide.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_Slide.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy();
    };
    Wrapper_Slide.prototype.check_zoom = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.zoom = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_Slide.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_Slide.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_Slide.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_Slide.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_Slide;
}());
export var Wrapper_Slides = (function () {
    function Wrapper_Slides(p0, p1, p2) {
        this._changed = false;
        this.context = new import0.Slides(p0, p1, p2);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
    }
    Wrapper_Slides.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_Slides.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
        (this.subscription1 && this.subscription1.unsubscribe());
        (this.subscription2 && this.subscription2.unsubscribe());
    };
    Wrapper_Slides.prototype.check_options = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.options = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_Slides.prototype.check_pager = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.pager = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_Slides.prototype.check_zoom = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.zoom = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_Slides.prototype.check_zoomDuration = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.zoomDuration = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_Slides.prototype.check_zoomMax = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_4, currValue))) {
            this._changed = true;
            this.context.zoomMax = currValue;
            this._expr_4 = currValue;
        }
    };
    Wrapper_Slides.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_Slides.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_Slides.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_Slides.prototype.subscribe = function (view, _eventHandler, emit0, emit1, emit2) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.ionWillChange.subscribe(_eventHandler.bind(view, 'ionWillChange')));
        }
        if (emit1) {
            (this.subscription1 = this.context.ionDidChange.subscribe(_eventHandler.bind(view, 'ionDidChange')));
        }
        if (emit2) {
            (this.subscription2 = this.context.ionDrag.subscribe(_eventHandler.bind(view, 'ionDrag')));
        }
    };
    return Wrapper_Slides;
}());
export var Wrapper_SlideLazy = (function () {
    function Wrapper_SlideLazy() {
        this._changed = false;
        this.context = new import0.SlideLazy();
    }
    Wrapper_SlideLazy.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_SlideLazy.prototype.ngOnDestroy = function () {
    };
    Wrapper_SlideLazy.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_SlideLazy.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_SlideLazy.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_SlideLazy.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_SlideLazy;
}());
var renderType_Slide_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_Slide_Host0 = (function (_super) {
    __extends(View_Slide_Host0, _super);
    function View_Slide_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_Slide_Host0, renderType_Slide_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_Slide_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ion-slide', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_Slide0(this.viewUtils, this, 0, this._el_0);
        this._Slide_0_3 = new Wrapper_Slide(new import8.ElementRef(this._el_0), this.injectorGet(import0.Slides, this.parentIndex));
        this.compView_0.create(this._Slide_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._Slide_0_3.context);
    };
    View_Slide_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.Slide) && (0 === requestNodeIndex))) {
            return this._Slide_0_3.context;
        }
        return notFoundResult;
    };
    View_Slide_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._Slide_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_Slide_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._Slide_0_3.ngOnDestroy();
    };
    View_Slide_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_Slide_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
    };
    return View_Slide_Host0;
}(import2.AppView));
export var SlideNgFactory = new import7.ComponentFactory('ion-slide', View_Slide_Host0, import0.Slide);
var styles_Slide = [];
var renderType_Slide = import3.createRenderComponentType('', 1, import5.ViewEncapsulation.None, styles_Slide, {});
export var View_Slide0 = (function (_super) {
    __extends(View_Slide0, _super);
    function View_Slide0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_Slide0, renderType_Slide, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckOnce);
    }
    View_Slide0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'slide-zoom'), null);
        this.projectNodes(this._el_0, 0);
        this.init(null, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    };
    return View_Slide0;
}(import2.AppView));
var renderType_Slides_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_Slides_Host0 = (function (_super) {
    __extends(View_Slides_Host0, _super);
    function View_Slides_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_Slides_Host0, renderType_Slides_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_Slides_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ion-slides', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_Slides0(this.viewUtils, this, 0, this._el_0);
        this._Slides_0_3 = new Wrapper_Slides(this.injectorGet(import9.Config, this.parentIndex), new import8.ElementRef(this._el_0), this.renderer);
        this.compView_0.create(this._Slides_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._Slides_0_3.context);
    };
    View_Slides_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.Slides) && (0 === requestNodeIndex))) {
            return this._Slides_0_3.context;
        }
        return notFoundResult;
    };
    View_Slides_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._Slides_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_Slides_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._Slides_0_3.ngOnDestroy();
    };
    View_Slides_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_Slides_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
    };
    return View_Slides_Host0;
}(import2.AppView));
export var SlidesNgFactory = new import7.ComponentFactory('ion-slides', View_Slides_Host0, import0.Slides);
var styles_Slides = [];
var renderType_Slides = import3.createRenderComponentType('', 1, import5.ViewEncapsulation.None, styles_Slides, {});
export var View_Slides0 = (function (_super) {
    __extends(View_Slides0, _super);
    function View_Slides0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_Slides0, renderType_Slides, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckOnce);
        this._expr_3 = import1.UNINITIALIZED;
    }
    View_Slides0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'swiper-container'), null);
        this._el_1 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'swiper-wrapper'), null);
        this.projectNodes(this._el_1, 0);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'swiper-pagination'), null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._el_1,
            this._el_2
        ]), null);
        return null;
    };
    View_Slides0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_3 = !this.context.showPager;
        if (import3.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setElementClass(this._el_2, 'hide', currVal_3);
            this._expr_3 = currVal_3;
        }
    };
    return View_Slides0;
}(import2.AppView));
//# sourceMappingURL=slides.ngfactory.js.map