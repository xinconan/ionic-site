/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
import * as import0 from './searchbar';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import11 from '@angular/core/src/linker/query_list';
import * as import12 from '../button/button';
import * as import13 from '../button/button.ngfactory';
import * as import14 from '../icon/icon.ngfactory';
export declare class Wrapper_Searchbar {
    _eventHandler: Function;
    context: import0.Searchbar;
    _changed: boolean;
    _expr_0: any;
    _expr_1: any;
    _expr_2: any;
    _expr_3: any;
    _expr_4: any;
    _expr_5: any;
    _expr_6: any;
    _expr_7: any;
    _expr_8: any;
    _expr_9: any;
    _expr_10: any;
    _expr_11: any;
    _expr_12: any;
    _expr_13: any;
    _expr_14: any;
    _expr_15: any;
    _expr_16: any;
    _expr_17: any;
    subscription0: any;
    subscription1: any;
    subscription2: any;
    subscription3: any;
    subscription4: any;
    constructor(p0: any, p1: any, p2: any, p3: any);
    ngOnDetach(view: import2.AppView<any>, componentView: import2.AppView<any>, el: any): void;
    ngOnDestroy(): void;
    check_color(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_mode(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_cancelButtonText(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_showCancelButton(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_debounce(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_placeholder(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_autocomplete(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_autocorrect(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_spellcheck(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_type(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_animated(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_value(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    ngDoCheck(view: import2.AppView<any>, el: any, throwOnChange: boolean): boolean;
    checkHost(view: import2.AppView<any>, componentView: import2.AppView<any>, el: any, throwOnChange: boolean): void;
    handleEvent(eventName: string, $event: any): boolean;
    subscribe(view: import2.AppView<any>, _eventHandler: any, emit0: boolean, emit1: boolean, emit2: boolean, emit3: boolean, emit4: boolean): void;
}
export declare const SearchbarNgFactory: import7.ComponentFactory<import0.Searchbar>;
export declare class View_Searchbar0 extends import2.AppView<import0.Searchbar> {
    _viewQuery_searchbarInput_0: import11.QueryList<any>;
    _viewQuery_searchbarIcon_1: import11.QueryList<any>;
    _viewQuery_cancelButton_2: import11.QueryList<any>;
    _el_0: any;
    _el_1: any;
    compView_1: import2.AppView<import12.Button>;
    _Button_1_3: import13.Wrapper_Button;
    _el_2: any;
    _Icon_2_3: import14.Wrapper_Icon;
    _el_3: any;
    _el_4: any;
    _el_5: any;
    compView_5: import2.AppView<import12.Button>;
    _Button_5_3: import13.Wrapper_Button;
    _el_6: any;
    compView_6: import2.AppView<import12.Button>;
    _Button_6_3: import13.Wrapper_Button;
    _text_7: any;
    _expr_18: any;
    _expr_19: any;
    _expr_20: any;
    _expr_21: any;
    _expr_22: any;
    _expr_23: any;
    _expr_24: any;
    constructor(viewUtils: import3.ViewUtils, parentView: import2.AppView<any>, parentIndex: number, parentElement: any);
    createInternal(rootSelector: string): import7.ComponentRef<any>;
    injectorGetInternal(token: any, requestNodeIndex: number, notFoundResult: any): any;
    detectChangesInternal(throwOnChange: boolean): void;
    destroyInternal(): void;
    visitProjectableNodesInternal(nodeIndex: number, ngContentIndex: number, cb: any, ctx: any): void;
    handleEvent_1(eventName: string, $event: any): boolean;
    handleEvent_4(eventName: string, $event: any): boolean;
    handleEvent_5(eventName: string, $event: any): boolean;
    handleEvent_6(eventName: string, $event: any): boolean;
}
