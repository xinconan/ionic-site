/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
import * as import0 from './show-hide-when';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import3 from '@angular/core/src/linker/view_utils';
export var Wrapper_HideWhen = (function () {
    function Wrapper_HideWhen(p0, p1, p2) {
        this._changed = false;
        this.context = new import0.HideWhen(p0, p1, p2);
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_HideWhen.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_HideWhen.prototype.ngOnDestroy = function () {
    };
    Wrapper_HideWhen.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_HideWhen.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_0 = this.context.isMatch;
        if (import3.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            view.renderer.setElementClass(el, 'hidden-hide-when', currVal_0);
            this._expr_0 = currVal_0;
        }
    };
    Wrapper_HideWhen.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_HideWhen.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_HideWhen;
}());
export var Wrapper_ShowWhen = (function () {
    function Wrapper_ShowWhen(p0, p1, p2) {
        this._changed = false;
        this.context = new import0.ShowWhen(p0, p1, p2);
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_ShowWhen.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ShowWhen.prototype.ngOnDestroy = function () {
    };
    Wrapper_ShowWhen.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_ShowWhen.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_0 = !this.context.isMatch;
        if (import3.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            view.renderer.setElementClass(el, 'hidden-show-when', currVal_0);
            this._expr_0 = currVal_0;
        }
    };
    Wrapper_ShowWhen.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_ShowWhen.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_ShowWhen;
}());
//# sourceMappingURL=show-hide-when.ngfactory.js.map