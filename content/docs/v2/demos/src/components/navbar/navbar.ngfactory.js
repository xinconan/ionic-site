/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './navbar';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../app/app';
import * as import9 from '../../navigation/view-controller';
import * as import10 from '../../navigation/nav-controller';
import * as import11 from '../../config/config';
import * as import12 from '@angular/core/src/linker/element_ref';
import * as import13 from '../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import14 from '../button/button';
import * as import15 from '../button/button.ngfactory';
import * as import16 from '../icon/icon.ngfactory';
import * as import17 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import18 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import19 from '@angular/common/src/directives/ng_class';
import * as import20 from '../icon/icon';
export var Wrapper_Navbar = (function () {
    function Wrapper_Navbar(p0, p1, p2, p3, p4, p5) {
        this._changed = false;
        this.context = new import0.Navbar(p0, p1, p2, p3, p4, p5);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
    }
    Wrapper_Navbar.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_Navbar.prototype.ngOnDestroy = function () {
    };
    Wrapper_Navbar.prototype.check_color = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.color = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_Navbar.prototype.check_mode = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.mode = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_Navbar.prototype.check_hideBackButton = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.hideBackButton = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_Navbar.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_Navbar.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_3 = this.context._hidden;
        if (import3.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            view.renderer.setElementProperty(el, 'hidden', currVal_3);
            this._expr_3 = currVal_3;
        }
        var currVal_4 = this.context._sbPadding;
        if (import3.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            view.renderer.setElementClass(el, 'statusbar-padding', currVal_4);
            this._expr_4 = currVal_4;
        }
    };
    Wrapper_Navbar.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_Navbar.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_Navbar;
}());
var renderType_Navbar_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_Navbar_Host0 = (function (_super) {
    __extends(View_Navbar_Host0, _super);
    function View_Navbar_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_Navbar_Host0, renderType_Navbar_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_Navbar_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ion-navbar', new import3.InlineArray2(2, 'class', 'toolbar'), rootSelector, null);
        this.compView_0 = new View_Navbar0(this.viewUtils, this, 0, this._el_0);
        this._Navbar_0_3 = new Wrapper_Navbar(this.injectorGet(import8.App, this.parentIndex), this.injectorGet(import9.ViewController, this.parentIndex, null), this.injectorGet(import10.NavController, this.parentIndex, null), this.injectorGet(import11.Config, this.parentIndex), new import12.ElementRef(this._el_0), this.renderer);
        this.compView_0.create(this._Navbar_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._Navbar_0_3.context);
    };
    View_Navbar_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.Navbar) && (0 === requestNodeIndex))) {
            return this._Navbar_0_3.context;
        }
        return notFoundResult;
    };
    View_Navbar_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._Navbar_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._Navbar_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_Navbar_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_Navbar_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_Navbar_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
        if (((nodeIndex == 0) && (ngContentIndex == 1))) { }
        if (((nodeIndex == 0) && (ngContentIndex == 2))) { }
        if (((nodeIndex == 0) && (ngContentIndex == 3))) { }
    };
    return View_Navbar_Host0;
}(import2.AppView));
export var NavbarNgFactory = new import7.ComponentFactory('ion-navbar', View_Navbar_Host0, import0.Navbar);
var styles_Navbar = [];
var renderType_Navbar = import3.createRenderComponentType('', 4, import5.ViewEncapsulation.None, styles_Navbar, {});
export var View_Navbar0 = (function (_super) {
    __extends(View_Navbar0, _super);
    function View_Navbar0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_Navbar0, renderType_Navbar, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
        this._expr_14 = import1.UNINITIALIZED;
        this._expr_15 = import1.UNINITIALIZED;
    }
    View_Navbar0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'toolbar-background'), null);
        this._NgClass_0_3 = new import13.Wrapper_NgClass(this.parentView.injectorGet(import17.IterableDiffers, this.parentIndex), this.parentView.injectorGet(import18.KeyValueDiffers, this.parentIndex), new import12.ElementRef(this._el_0), this.renderer);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'button', new import3.InlineArray4(4, 'class', 'back-button', 'ion-button', 'bar-button'), null);
        this.compView_1 = new import15.View_Button0(this.viewUtils, this, 1, this._el_1);
        this._NgClass_1_3 = new import13.Wrapper_NgClass(this.parentView.injectorGet(import17.IterableDiffers, this.parentIndex), this.parentView.injectorGet(import18.KeyValueDiffers, this.parentIndex), new import12.ElementRef(this._el_1), this.renderer);
        this._Button_1_4 = new import15.Wrapper_Button('bar-button', this.parentView.injectorGet(import11.Config, this.parentIndex), new import12.ElementRef(this._el_1), this.renderer);
        this._el_2 = import3.createRenderElement(this.renderer, null, 'ion-icon', new import3.InlineArray4(4, 'class', 'back-button-icon', 'role', 'img'), null);
        this._NgClass_2_3 = new import13.Wrapper_NgClass(this.parentView.injectorGet(import17.IterableDiffers, this.parentIndex), this.parentView.injectorGet(import18.KeyValueDiffers, this.parentIndex), new import12.ElementRef(this._el_2), this.renderer);
        this._Icon_2_4 = new import16.Wrapper_Icon(this.parentView.injectorGet(import11.Config, this.parentIndex), new import12.ElementRef(this._el_2), this.renderer);
        this._el_3 = import3.createRenderElement(this.renderer, null, 'span', new import3.InlineArray2(2, 'class', 'back-button-text'), null);
        this._NgClass_3_3 = new import13.Wrapper_NgClass(this.parentView.injectorGet(import17.IterableDiffers, this.parentIndex), this.parentView.injectorGet(import18.KeyValueDiffers, this.parentIndex), new import12.ElementRef(this._el_3), this.renderer);
        this._text_4 = this.renderer.createText(this._el_3, '', null);
        this.compView_1.create(this._Button_1_4.context);
        this.projectNodes(parentRenderNode, 0);
        this.projectNodes(parentRenderNode, 1);
        this.projectNodes(parentRenderNode, 2);
        this._el_5 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'toolbar-content'), null);
        this._NgClass_5_3 = new import13.Wrapper_NgClass(this.parentView.injectorGet(import17.IterableDiffers, this.parentIndex), this.parentView.injectorGet(import18.KeyValueDiffers, this.parentIndex), new import12.ElementRef(this._el_5), this.renderer);
        this.projectNodes(this._el_5, 3);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_1, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_1));
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._el_1,
            this._el_2,
            this._el_3,
            this._text_4,
            this._el_5
        ]), [disposable_0]);
        return null;
    };
    View_Navbar0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import19.NgClass) && (0 === requestNodeIndex))) {
            return this._NgClass_0_3.context;
        }
        if (((token === import19.NgClass) && (2 === requestNodeIndex))) {
            return this._NgClass_2_3.context;
        }
        if (((token === import20.Icon) && (2 === requestNodeIndex))) {
            return this._Icon_2_4.context;
        }
        if (((token === import19.NgClass) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 4)))) {
            return this._NgClass_3_3.context;
        }
        if (((token === import19.NgClass) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) {
            return this._NgClass_1_3.context;
        }
        if (((token === import14.Button) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) {
            return this._Button_1_4.context;
        }
        if (((token === import19.NgClass) && (5 === requestNodeIndex))) {
            return this._NgClass_5_3.context;
        }
        return notFoundResult;
    };
    View_Navbar0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = 'toolbar-background';
        this._NgClass_0_3.check_klass(currVal_0_0_0, throwOnChange, false);
        var currVal_0_0_1 = ('toolbar-background-' + this.context._mode);
        this._NgClass_0_3.check_ngClass(currVal_0_0_1, throwOnChange, false);
        this._NgClass_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_1_0_0 = 'back-button';
        this._NgClass_1_3.check_klass(currVal_1_0_0, throwOnChange, false);
        var currVal_1_0_1 = ('back-button-' + this.context._mode);
        this._NgClass_1_3.check_ngClass(currVal_1_0_1, throwOnChange, false);
        this._NgClass_1_3.ngDoCheck(this, this._el_1, throwOnChange);
        if (this._Button_1_4.ngDoCheck(this, this._el_1, throwOnChange)) {
            this.compView_1.markAsCheckOnce();
        }
        var currVal_2_0_0 = 'back-button-icon';
        this._NgClass_2_3.check_klass(currVal_2_0_0, throwOnChange, false);
        var currVal_2_0_1 = ('back-button-icon-' + this.context._mode);
        this._NgClass_2_3.check_ngClass(currVal_2_0_1, throwOnChange, false);
        this._NgClass_2_3.ngDoCheck(this, this._el_2, throwOnChange);
        var currVal_2_1_0 = this.context._bbIcon;
        this._Icon_2_4.check_name(currVal_2_1_0, throwOnChange, false);
        this._Icon_2_4.ngDoCheck(this, this._el_2, throwOnChange);
        var currVal_3_0_0 = 'back-button-text';
        this._NgClass_3_3.check_klass(currVal_3_0_0, throwOnChange, false);
        var currVal_3_0_1 = ('back-button-text-' + this.context._mode);
        this._NgClass_3_3.check_ngClass(currVal_3_0_1, throwOnChange, false);
        this._NgClass_3_3.ngDoCheck(this, this._el_3, throwOnChange);
        var currVal_5_0_0 = 'toolbar-content';
        this._NgClass_5_3.check_klass(currVal_5_0_0, throwOnChange, false);
        var currVal_5_0_1 = ('toolbar-content-' + this.context._mode);
        this._NgClass_5_3.check_ngClass(currVal_5_0_1, throwOnChange, false);
        this._NgClass_5_3.ngDoCheck(this, this._el_5, throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Button_1_4.context.ngAfterContentInit();
            }
        }
        var currVal_14 = this.context._hideBb;
        if (import3.checkBinding(throwOnChange, this._expr_14, currVal_14)) {
            this.renderer.setElementProperty(this._el_1, 'hidden', currVal_14);
            this._expr_14 = currVal_14;
        }
        this._Icon_2_4.checkHost(this, this, this._el_2, throwOnChange);
        var currVal_15 = import3.inlineInterpolate(1, '', this.context._backText, '');
        if (import3.checkBinding(throwOnChange, this._expr_15, currVal_15)) {
            this.renderer.setText(this._text_4, currVal_15);
            this._expr_15 = currVal_15;
        }
        this.compView_1.detectChanges(throwOnChange);
    };
    View_Navbar0.prototype.destroyInternal = function () {
        this.compView_1.destroy();
        this._Icon_2_4.ngOnDestroy();
    };
    View_Navbar0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 1) && (ngContentIndex == 0))) {
            cb(this._el_2, ctx);
            cb(this._el_3, ctx);
        }
    };
    View_Navbar0.prototype.handleEvent_1 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.backButtonClick($event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_Navbar0;
}(import2.AppView));
//# sourceMappingURL=navbar.ngfactory.js.map