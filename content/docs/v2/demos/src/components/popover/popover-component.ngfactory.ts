/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './popover-component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/linker/component_factory_resolver';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '../../config/config';
import * as import11 from '../../navigation/nav-params';
import * as import12 from '../../navigation/view-controller';
import * as import13 from '../../gestures/gesture-controller';
import * as import14 from '@angular/core/src/linker/query_list';
import * as import15 from '../backdrop/backdrop.ngfactory';
import * as import16 from '@angular/core/src/linker/view_container';
import * as import17 from '../backdrop/backdrop';
export class Wrapper_PopoverCmp {
  /*private*/ _eventHandler:Function;
  context:import0.PopoverCmp;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any,p2:any,p3:any,p4:any,p5:any,p6:any) {
    this._changed = false;
    this.context = new import0.PopoverCmp(p0,p1,p2,p3,p4,p5,p6);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    if ((eventName == 'body:keyup')) {
      const pd_sub_0:any = ((<any>this.context._keyUp($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_PopoverCmp_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_PopoverCmp_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.PopoverCmp>;
  _PopoverCmp_0_3:Wrapper_PopoverCmp;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_PopoverCmp_Host0,renderType_PopoverCmp_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'ion-popover',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_PopoverCmp0(this.viewUtils,this,0,this._el_0);
    this._PopoverCmp_0_3 = new Wrapper_PopoverCmp(this.injectorGet(import8.ComponentFactoryResolver,this.parentIndex),new import9.ElementRef(this._el_0),this.renderer,this.injectorGet(import10.Config,this.parentIndex),this.injectorGet(import11.NavParams,this.parentIndex),this.injectorGet(import12.ViewController,this.parentIndex),this.injectorGet(import13.GestureController,this.parentIndex));
    this.compView_0.create(this._PopoverCmp_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'keyup','body'),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._PopoverCmp_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.PopoverCmp) && (0 === requestNodeIndex))) { return this._PopoverCmp_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._PopoverCmp_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._PopoverCmp_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._PopoverCmp_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
export const PopoverCmpNgFactory:import7.ComponentFactory<import0.PopoverCmp> = new import7.ComponentFactory<import0.PopoverCmp>('ion-popover',View_PopoverCmp_Host0,import0.PopoverCmp);
const styles_PopoverCmp:any[] = ([] as any[]);
var renderType_PopoverCmp:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_PopoverCmp,{});
export class View_PopoverCmp0 extends import1.AppView<import0.PopoverCmp> {
  _viewQuery_viewport_0:import14.QueryList<any>;
  _el_0:any;
  _Backdrop_0_3:import15.Wrapper_Backdrop;
  _el_1:any;
  _el_2:any;
  _el_3:any;
  _el_4:any;
  _el_5:any;
  /*private*/ _vc_5:import16.ViewContainer;
  /*private*/ _expr_9:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_PopoverCmp0,renderType_PopoverCmp,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
    this._expr_9 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_viewport_0 = new import14.QueryList<any>();
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'ion-backdrop',new import3.InlineArray8(6,'disable-activated','','role','presentation','tappable',''),(null as any));
    this._Backdrop_0_3 = new import15.Wrapper_Backdrop(new import9.ElementRef(this._el_0),this.renderer);
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','popover-wrapper'),(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_1,'div',new import3.InlineArray2(2,'class','popover-arrow'),(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'div',new import3.InlineArray2(2,'class','popover-content'),(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_3,'div',new import3.InlineArray2(2,'class','popover-viewport'),(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_4,'div',new import3.InlineArray2(2,'nav-viewport',''),(null as any));
    this._vc_5 = new import16.ViewContainer(5,4,this,this._el_5);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this._viewQuery_viewport_0.reset([this._vc_5.vcRef]);
    this.context._viewport = this._viewQuery_viewport_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._el_1,
      this._el_2,
      this._el_3,
      this._el_4,
      this._el_5
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.Backdrop) && (0 === requestNodeIndex))) { return this._Backdrop_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._Backdrop_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._vc_5.detectChangesInNestedViews(throwOnChange);
    const currVal_9:boolean = !this.context.d.showBackdrop;
    if (import3.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this.renderer.setElementProperty(this._el_0,'hidden',currVal_9);
      this._expr_9 = currVal_9;
    }
  }
  destroyInternal():void {
    this._vc_5.destroyNestedViews();
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context._bdClick()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}