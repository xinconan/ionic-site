/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './toast-component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../navigation/view-controller';
import * as import9 from '../../config/config';
import * as import10 from '@angular/core/src/linker/element_ref';
import * as import11 from '../../navigation/nav-params';
import * as import12 from '@angular/core/src/linker/view_container';
import * as import13 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import14 from '@angular/core/src/linker/template_ref';
import * as import15 from '@angular/common/src/directives/ng_if';
import * as import16 from '../button/button';
import * as import17 from '../button/button.ngfactory';
export var Wrapper_ToastCmp = (function () {
    function Wrapper_ToastCmp(p0, p1, p2, p3, p4) {
        this._changed = false;
        this.context = new import0.ToastCmp(p0, p1, p2, p3, p4);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
    }
    Wrapper_ToastCmp.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ToastCmp.prototype.ngOnDestroy = function () {
    };
    Wrapper_ToastCmp.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_ToastCmp.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_0 = this.context.hdrId;
        if (import3.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            view.renderer.setElementAttribute(el, 'aria-labelledby', ((currVal_0 == null) ? null : currVal_0.toString()));
            this._expr_0 = currVal_0;
        }
        var currVal_1 = this.context.descId;
        if (import3.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            view.renderer.setElementAttribute(el, 'aria-describedby', ((currVal_1 == null) ? null : currVal_1.toString()));
            this._expr_1 = currVal_1;
        }
    };
    Wrapper_ToastCmp.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_ToastCmp.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_ToastCmp;
}());
var renderType_ToastCmp_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_ToastCmp_Host0 = (function (_super) {
    __extends(View_ToastCmp_Host0, _super);
    function View_ToastCmp_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ToastCmp_Host0, renderType_ToastCmp_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_ToastCmp_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ion-toast', new import3.InlineArray2(2, 'role', 'dialog'), rootSelector, null);
        this.compView_0 = new View_ToastCmp0(this.viewUtils, this, 0, this._el_0);
        this._ToastCmp_0_3 = new Wrapper_ToastCmp(this.injectorGet(import8.ViewController, this.parentIndex), this.injectorGet(import9.Config, this.parentIndex), new import10.ElementRef(this._el_0), this.injectorGet(import11.NavParams, this.parentIndex), this.renderer);
        this.compView_0.create(this._ToastCmp_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._ToastCmp_0_3.context);
    };
    View_ToastCmp_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.ToastCmp) && (0 === requestNodeIndex))) {
            return this._ToastCmp_0_3.context;
        }
        return notFoundResult;
    };
    View_ToastCmp_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._ToastCmp_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._ToastCmp_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._ToastCmp_0_3.context.ngAfterViewInit();
            }
        }
    };
    View_ToastCmp_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_ToastCmp_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_ToastCmp_Host0;
}(import2.AppView));
export var ToastCmpNgFactory = new import7.ComponentFactory('ion-toast', View_ToastCmp_Host0, import0.ToastCmp);
var styles_ToastCmp = [];
var renderType_ToastCmp = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, styles_ToastCmp, {});
export var View_ToastCmp0 = (function (_super) {
    __extends(View_ToastCmp0, _super);
    function View_ToastCmp0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ToastCmp0, renderType_ToastCmp, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
        this._expr_15 = import1.UNINITIALIZED;
        this._expr_16 = import1.UNINITIALIZED;
        this._expr_17 = import1.UNINITIALIZED;
    }
    View_ToastCmp0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'toast-wrapper'), null);
        this._text_1 = this.renderer.createText(this._el_0, ' ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'toast-container'), null);
        this._text_3 = this.renderer.createText(this._el_2, ' ', null);
        this._anchor_4 = this.renderer.createTemplateAnchor(this._el_2, null);
        this._vc_4 = new import12.ViewContainer(4, 2, this, this._anchor_4);
        this._TemplateRef_4_5 = new import14.TemplateRef_(this, 4, this._anchor_4);
        this._NgIf_4_6 = new import13.Wrapper_NgIf(this._vc_4.vcRef, this._TemplateRef_4_5);
        this._text_5 = this.renderer.createText(this._el_2, ' ', null);
        this._anchor_6 = this.renderer.createTemplateAnchor(this._el_2, null);
        this._vc_6 = new import12.ViewContainer(6, 2, this, this._anchor_6);
        this._TemplateRef_6_5 = new import14.TemplateRef_(this, 6, this._anchor_6);
        this._NgIf_6_6 = new import13.Wrapper_NgIf(this._vc_6.vcRef, this._TemplateRef_6_5);
        this._text_7 = this.renderer.createText(this._el_2, ' ', null);
        this._text_8 = this.renderer.createText(this._el_0, ' ', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._anchor_4,
            this._text_5,
            this._anchor_6,
            this._text_7,
            this._text_8
        ]), null);
        return null;
    };
    View_ToastCmp0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import14.TemplateRef) && (4 === requestNodeIndex))) {
            return this._TemplateRef_4_5;
        }
        if (((token === import15.NgIf) && (4 === requestNodeIndex))) {
            return this._NgIf_4_6.context;
        }
        if (((token === import14.TemplateRef) && (6 === requestNodeIndex))) {
            return this._TemplateRef_6_5;
        }
        if (((token === import15.NgIf) && (6 === requestNodeIndex))) {
            return this._NgIf_6_6.context;
        }
        return notFoundResult;
    };
    View_ToastCmp0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_4_0_0 = this.context.d.message;
        this._NgIf_4_6.check_ngIf(currVal_4_0_0, throwOnChange, false);
        this._NgIf_4_6.ngDoCheck(this, this._anchor_4, throwOnChange);
        var currVal_6_0_0 = this.context.d.showCloseButton;
        this._NgIf_6_6.check_ngIf(currVal_6_0_0, throwOnChange, false);
        this._NgIf_6_6.ngDoCheck(this, this._anchor_6, throwOnChange);
        this._vc_4.detectChangesInNestedViews(throwOnChange);
        this._vc_6.detectChangesInNestedViews(throwOnChange);
        var currVal_15 = (this.context.d.position === 'bottom');
        if (import3.checkBinding(throwOnChange, this._expr_15, currVal_15)) {
            this.renderer.setElementClass(this._el_0, 'toast-bottom', currVal_15);
            this._expr_15 = currVal_15;
        }
        var currVal_16 = (this.context.d.position === 'middle');
        if (import3.checkBinding(throwOnChange, this._expr_16, currVal_16)) {
            this.renderer.setElementClass(this._el_0, 'toast-middle', currVal_16);
            this._expr_16 = currVal_16;
        }
        var currVal_17 = (this.context.d.position === 'top');
        if (import3.checkBinding(throwOnChange, this._expr_17, currVal_17)) {
            this.renderer.setElementClass(this._el_0, 'toast-top', currVal_17);
            this._expr_17 = currVal_17;
        }
    };
    View_ToastCmp0.prototype.destroyInternal = function () {
        this._vc_4.destroyNestedViews();
        this._vc_6.destroyNestedViews();
    };
    View_ToastCmp0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 4)) {
            return new View_ToastCmp1(this.viewUtils, this, 4, this._anchor_4, this._vc_4);
        }
        if ((nodeIndex == 6)) {
            return new View_ToastCmp2(this.viewUtils, this, 6, this._anchor_6, this._vc_6);
        }
        return null;
    };
    return View_ToastCmp0;
}(import2.AppView));
var View_ToastCmp1 = (function (_super) {
    __extends(View_ToastCmp1, _super);
    function View_ToastCmp1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_ToastCmp1, renderType_ToastCmp, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
    }
    View_ToastCmp1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', new import3.InlineArray2(2, 'class', 'toast-message'), null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), null);
        return null;
    };
    View_ToastCmp1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2 = import3.inlineInterpolate(1, '', this.parentView.context.hdrId, '');
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementProperty(this._el_0, 'id', currVal_2);
            this._expr_2 = currVal_2;
        }
        var currVal_3 = import3.inlineInterpolate(1, '', this.parentView.context.d.message, '');
        if (import3.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setText(this._text_1, currVal_3);
            this._expr_3 = currVal_3;
        }
    };
    View_ToastCmp1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_ToastCmp1;
}(import2.AppView));
var View_ToastCmp2 = (function (_super) {
    __extends(View_ToastCmp2, _super);
    function View_ToastCmp2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_ToastCmp2, renderType_ToastCmp, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_4 = import1.UNINITIALIZED;
    }
    View_ToastCmp2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'button', new import3.InlineArray8(6, 'class', 'toast-button', 'clear', '', 'ion-button', ''), null);
        this.compView_0 = new import17.View_Button0(this.viewUtils, this, 0, this._el_0);
        this._Button_0_3 = new import17.Wrapper_Button('', this.parentView.parentView.injectorGet(import9.Config, this.parentView.parentIndex), new import10.ElementRef(this._el_0), this.renderer);
        this._text_1 = this.renderer.createText(null, '', null);
        this.compView_0.create(this._Button_0_3.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1
        ]), [disposable_0]);
        return null;
    };
    View_ToastCmp2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import16.Button) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._Button_0_3.context;
        }
        return notFoundResult;
    };
    View_ToastCmp2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = '';
        this._Button_0_3.check_clear(currVal_0_0_0, throwOnChange, false);
        if (this._Button_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Button_0_3.context.ngAfterContentInit();
            }
        }
        var currVal_4 = import3.inlineInterpolate(1, ' ', (this.parentView.context.d.closeButtonText || 'Close'), ' ');
        if (import3.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this.renderer.setText(this._text_1, currVal_4);
            this._expr_4 = currVal_4;
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_ToastCmp2.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_ToastCmp2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_ToastCmp2.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) {
            cb(this._text_1, ctx);
        }
    };
    View_ToastCmp2.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.parentView.context.cbClick() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_ToastCmp2;
}(import2.AppView));
//# sourceMappingURL=toast-component.ngfactory.js.map