/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './input';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../config/config';
import * as import9 from '../../util/form';
import * as import10 from '../item/item';
import * as import11 from '../app/app';
import * as import12 from '../../platform/platform';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from '../content/content';
import * as import15 from '../../navigation/nav-controller';
import * as import16 from '@angular/forms/src/directives/ng_control';
import * as import17 from '../../util/dom-controller';
import * as import18 from '@angular/core/src/linker/query_list';
import * as import19 from '../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import20 from '../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import21 from '../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import22 from '../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import23 from './native-input.ngfactory';
import * as import24 from '@angular/core/src/linker/view_container';
import * as import25 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import26 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import27 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import28 from '@angular/core/src/linker/template_ref';
import * as import29 from '@angular/common/src/directives/ng_class';
import * as import30 from '@angular/forms/src/directives/default_value_accessor';
import * as import31 from '@angular/forms/src/directives/control_value_accessor';
import * as import32 from '@angular/forms/src/directives/ng_model';
import * as import33 from '@angular/forms/src/directives/ng_control_status';
import * as import34 from './native-input';
import * as import35 from '@angular/common/src/directives/ng_if';
import * as import36 from '../button/button';
import * as import37 from '../button/button.ngfactory';
export var Wrapper_TextArea = (function () {
    function Wrapper_TextArea(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
        this._changed = false;
        this.context = new import0.TextArea(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
    }
    Wrapper_TextArea.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_TextArea.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy();
        (this.subscription0 && this.subscription0.unsubscribe());
        (this.subscription1 && this.subscription1.unsubscribe());
    };
    Wrapper_TextArea.prototype.check_placeholder = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.placeholder = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_TextArea.prototype.check_value = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.value = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_TextArea.prototype.check_disabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.disabled = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_TextArea.prototype.check_mode = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.mode = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_TextArea.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_TextArea.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_TextArea.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_TextArea.prototype.subscribe = function (view, _eventHandler, emit0, emit1) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.blur.subscribe(_eventHandler.bind(view, 'blur')));
        }
        if (emit1) {
            (this.subscription1 = this.context.focus.subscribe(_eventHandler.bind(view, 'focus')));
        }
    };
    return Wrapper_TextArea;
}());
export var Wrapper_TextInput = (function () {
    function Wrapper_TextInput(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
        this._changed = false;
        this.context = new import0.TextInput(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
        this._expr_5 = import1.UNINITIALIZED;
        this._expr_6 = import1.UNINITIALIZED;
    }
    Wrapper_TextInput.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_TextInput.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy();
        (this.subscription0 && this.subscription0.unsubscribe());
        (this.subscription1 && this.subscription1.unsubscribe());
    };
    Wrapper_TextInput.prototype.check_placeholder = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.placeholder = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_TextInput.prototype.check_clearInput = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.clearInput = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_TextInput.prototype.check_value = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.value = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_TextInput.prototype.check_type = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.type = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_TextInput.prototype.check_disabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_4, currValue))) {
            this._changed = true;
            this.context.disabled = currValue;
            this._expr_4 = currValue;
        }
    };
    Wrapper_TextInput.prototype.check_mode = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_5, currValue))) {
            this._changed = true;
            this.context.mode = currValue;
            this._expr_5 = currValue;
        }
    };
    Wrapper_TextInput.prototype.check_clearOnEdit = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_6, currValue))) {
            this._changed = true;
            this.context.clearOnEdit = currValue;
            this._expr_6 = currValue;
        }
    };
    Wrapper_TextInput.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_TextInput.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_TextInput.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_TextInput.prototype.subscribe = function (view, _eventHandler, emit0, emit1) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.blur.subscribe(_eventHandler.bind(view, 'blur')));
        }
        if (emit1) {
            (this.subscription1 = this.context.focus.subscribe(_eventHandler.bind(view, 'focus')));
        }
    };
    return Wrapper_TextInput;
}());
var renderType_TextArea_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_TextArea_Host0 = (function (_super) {
    __extends(View_TextArea_Host0, _super);
    function View_TextArea_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_TextArea_Host0, renderType_TextArea_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_TextArea_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ion-textarea', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_TextArea0(this.viewUtils, this, 0, this._el_0);
        this._TextArea_0_3 = new Wrapper_TextArea(this.injectorGet(import8.Config, this.parentIndex), this.injectorGet(import9.Form, this.parentIndex), this.injectorGet(import10.Item, this.parentIndex, null), this.injectorGet(import11.App, this.parentIndex), this.injectorGet(import12.Platform, this.parentIndex), new import13.ElementRef(this._el_0), this.renderer, this.injectorGet(import14.Content, this.parentIndex, null), this.injectorGet(import15.NavController, this.parentIndex, null), this.injectorGet(import16.NgControl, this.parentIndex, null), this.injectorGet(import17.DomController, this.parentIndex));
        this.compView_0.create(this._TextArea_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._TextArea_0_3.context);
    };
    View_TextArea_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.TextArea) && (0 === requestNodeIndex))) {
            return this._TextArea_0_3.context;
        }
        return notFoundResult;
    };
    View_TextArea_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._TextArea_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        if (!throwOnChange) {
            this._TextArea_0_3.context.ngAfterContentChecked();
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_TextArea_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._TextArea_0_3.ngOnDestroy();
    };
    View_TextArea_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_TextArea_Host0;
}(import2.AppView));
export var TextAreaNgFactory = new import7.ComponentFactory('ion-textarea', View_TextArea_Host0, import0.TextArea);
var styles_TextArea = [];
var renderType_TextArea = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, styles_TextArea, {});
export var View_TextArea0 = (function (_super) {
    __extends(View_TextArea0, _super);
    function View_TextArea0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_TextArea0, renderType_TextArea, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
        this._expr_18 = import1.UNINITIALIZED;
    }
    View_TextArea0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._viewQuery_NativeInput_0 = new import18.QueryList();
        this._viewQuery_NextInput_1 = new import18.QueryList();
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'textarea', new import3.InlineArray2(2, 'class', 'text-input'), null);
        this._NgClass_0_3 = new import19.Wrapper_NgClass(this.parentView.injectorGet(import26.IterableDiffers, this.parentIndex), this.parentView.injectorGet(import27.KeyValueDiffers, this.parentIndex), new import13.ElementRef(this._el_0), this.renderer);
        this._DefaultValueAccessor_0_4 = new import20.Wrapper_DefaultValueAccessor(this.renderer, new import13.ElementRef(this._el_0));
        this._NG_VALUE_ACCESSOR_0_5 = [this._DefaultValueAccessor_0_4.context];
        this._NgModel_0_6 = new import21.Wrapper_NgModel(null, null, null, this._NG_VALUE_ACCESSOR_0_5);
        this._NgControl_0_7 = this._NgModel_0_6.context;
        this._NgControlStatus_0_8 = new import22.Wrapper_NgControlStatus(this._NgControl_0_7);
        this._NativeInput_0_9 = new import23.Wrapper_NativeInput(new import13.ElementRef(this._el_0), this.renderer, this.parentView.injectorGet(import8.Config, this.parentIndex), this._NgControl_0_7);
        this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._vc_1 = new import24.ViewContainer(1, null, this, this._anchor_1);
        this._TemplateRef_1_5 = new import28.TemplateRef_(this, 1, this._anchor_1);
        this._NgIf_1_6 = new import25.Wrapper_NgIf(this._vc_1.vcRef, this._TemplateRef_1_5);
        this._anchor_2 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._vc_2 = new import24.ViewContainer(2, null, this, this._anchor_2);
        this._TemplateRef_2_5 = new import28.TemplateRef_(this, 2, this._anchor_2);
        this._NgIf_2_6 = new import25.Wrapper_NgIf(this._vc_2.vcRef, this._TemplateRef_2_5);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray16(10, 'ngModelChange', null, 'blur', null, 'focus', null, 'input', null, 'keydown', null), this.eventHandler(this.handleEvent_0));
        this._NgModel_0_6.subscribe(this, this.eventHandler(this.handleEvent_0), true);
        this._NativeInput_0_9.subscribe(this, this.eventHandler(this.handleEvent_0), false, false, true);
        this._viewQuery_NativeInput_0.reset([this._NativeInput_0_9.context]);
        this.context._nativeInput = this._viewQuery_NativeInput_0.first;
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._anchor_1,
            this._anchor_2
        ]), [disposable_0]);
        return null;
    };
    View_TextArea0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import29.NgClass) && (0 === requestNodeIndex))) {
            return this._NgClass_0_3.context;
        }
        if (((token === import30.DefaultValueAccessor) && (0 === requestNodeIndex))) {
            return this._DefaultValueAccessor_0_4.context;
        }
        if (((token === import31.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_0_5;
        }
        if (((token === import32.NgModel) && (0 === requestNodeIndex))) {
            return this._NgModel_0_6.context;
        }
        if (((token === import16.NgControl) && (0 === requestNodeIndex))) {
            return this._NgControl_0_7;
        }
        if (((token === import33.NgControlStatus) && (0 === requestNodeIndex))) {
            return this._NgControlStatus_0_8.context;
        }
        if (((token === import34.NativeInput) && (0 === requestNodeIndex))) {
            return this._NativeInput_0_9.context;
        }
        if (((token === import28.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import35.NgIf) && (1 === requestNodeIndex))) {
            return this._NgIf_1_6.context;
        }
        if (((token === import28.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import35.NgIf) && (2 === requestNodeIndex))) {
            return this._NgIf_2_6.context;
        }
        return notFoundResult;
    };
    View_TextArea0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = 'text-input';
        this._NgClass_0_3.check_klass(currVal_0_0_0, throwOnChange, false);
        var currVal_0_0_1 = ('text-input-' + this.context._mode);
        this._NgClass_0_3.check_ngClass(currVal_0_0_1, throwOnChange, false);
        this._NgClass_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._DefaultValueAccessor_0_4.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_0_2_0 = this.context._value;
        this._NgModel_0_6.check_model(currVal_0_2_0, throwOnChange, false);
        this._NgModel_0_6.ngDoCheck(this, this._el_0, throwOnChange);
        this._NgControlStatus_0_8.ngDoCheck(this, this._el_0, throwOnChange);
        this._NativeInput_0_9.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_1_0_0 = this.context._useAssist;
        this._NgIf_1_6.check_ngIf(currVal_1_0_0, throwOnChange, false);
        this._NgIf_1_6.ngDoCheck(this, this._anchor_1, throwOnChange);
        var currVal_2_0_0 = this.context._useAssist;
        this._NgIf_2_6.check_ngIf(currVal_2_0_0, throwOnChange, false);
        this._NgIf_2_6.ngDoCheck(this, this._anchor_2, throwOnChange);
        this._vc_1.detectChangesInNestedViews(throwOnChange);
        this._vc_2.detectChangesInNestedViews(throwOnChange);
        var currVal_18 = this.context.placeholder;
        if (import3.checkBinding(throwOnChange, this._expr_18, currVal_18)) {
            this.renderer.setElementProperty(this._el_0, 'placeholder', currVal_18);
            this._expr_18 = currVal_18;
        }
        this._NgControlStatus_0_8.checkHost(this, this, this._el_0, throwOnChange);
        if (!throwOnChange) {
            if (this._viewQuery_NextInput_1.dirty) {
                this._viewQuery_NextInput_1.reset([this._vc_1.mapNestedViews(View_TextArea1, function (nestedView) {
                        return [nestedView._NextInput_0_3.context];
                    })]);
                this.context._nextInput = this._viewQuery_NextInput_1.first;
            }
        }
    };
    View_TextArea0.prototype.destroyInternal = function () {
        this._vc_1.destroyNestedViews();
        this._vc_2.destroyNestedViews();
        this._NgModel_0_6.ngOnDestroy();
        this._NativeInput_0_9.ngOnDestroy();
    };
    View_TextArea0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 1)) {
            return new View_TextArea1(this.viewUtils, this, 1, this._anchor_1, this._vc_1);
        }
        if ((nodeIndex == 2)) {
            return new View_TextArea2(this.viewUtils, this, 2, this._anchor_2, this._vc_2);
        }
        return null;
    };
    View_TextArea0.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_0_4.handleEvent(eventName, $event) && result);
        result = (this._NativeInput_0_9.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.context._value = $event) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'blur')) {
            var pd_sub_1 = (this.context.inputBlurred($event) !== false);
            result = (pd_sub_1 && result);
        }
        if ((eventName == 'focus')) {
            var pd_sub_2 = (this.context.inputFocused($event) !== false);
            result = (pd_sub_2 && result);
        }
        return result;
    };
    return View_TextArea0;
}(import2.AppView));
var View_TextArea1 = (function (_super) {
    __extends(View_TextArea1, _super);
    function View_TextArea1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_TextArea1, renderType_TextArea, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_TextArea1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'input', new import3.InlineArray8(6, 'aria-hidden', 'true', 'next-input', '', 'type', 'text'), null);
        this._NextInput_0_3 = new import23.Wrapper_NextInput();
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'focus', null), this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), [disposable_0]);
        return null;
    };
    View_TextArea1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import34.NextInput) && (0 === requestNodeIndex))) {
            return this._NextInput_0_3.context;
        }
        return notFoundResult;
    };
    View_TextArea1.prototype.detectChangesInternal = function (throwOnChange) {
        this._NextInput_0_3.ngDoCheck(this, this._el_0, throwOnChange);
    };
    View_TextArea1.prototype.dirtyParentQueriesInternal = function () {
        this.parentView._viewQuery_NextInput_1.setDirty();
    };
    View_TextArea1.prototype.destroyInternal = function () {
        this._NextInput_0_3.ngOnDestroy();
    };
    View_TextArea1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_TextArea1.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._NextInput_0_3.handleEvent(eventName, $event) && result);
        return result;
    };
    return View_TextArea1;
}(import2.AppView));
var View_TextArea2 = (function (_super) {
    __extends(View_TextArea2, _super);
    function View_TextArea2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_TextArea2, renderType_TextArea, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_TextArea2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', new import3.InlineArray4(4, 'class', 'input-cover', 'tappable', ''), null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray8(8, 'touchstart', null, 'touchend', null, 'mousedown', null, 'mouseup', null), this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), [disposable_0]);
        return null;
    };
    View_TextArea2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_TextArea2.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'touchstart')) {
            var pd_sub_0 = (this.parentView.context.pointerStart($event) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'touchend')) {
            var pd_sub_1 = (this.parentView.context.pointerEnd($event) !== false);
            result = (pd_sub_1 && result);
        }
        if ((eventName == 'mousedown')) {
            var pd_sub_2 = (this.parentView.context.pointerStart($event) !== false);
            result = (pd_sub_2 && result);
        }
        if ((eventName == 'mouseup')) {
            var pd_sub_3 = (this.parentView.context.pointerEnd($event) !== false);
            result = (pd_sub_3 && result);
        }
        return result;
    };
    return View_TextArea2;
}(import2.AppView));
var renderType_TextInput_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_TextInput_Host0 = (function (_super) {
    __extends(View_TextInput_Host0, _super);
    function View_TextInput_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_TextInput_Host0, renderType_TextInput_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_TextInput_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ion-input', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_TextInput0(this.viewUtils, this, 0, this._el_0);
        this._TextInput_0_3 = new Wrapper_TextInput(this.injectorGet(import8.Config, this.parentIndex), this.injectorGet(import9.Form, this.parentIndex), this.injectorGet(import10.Item, this.parentIndex, null), this.injectorGet(import11.App, this.parentIndex), this.injectorGet(import12.Platform, this.parentIndex), new import13.ElementRef(this._el_0), this.renderer, this.injectorGet(import14.Content, this.parentIndex, null), this.injectorGet(import15.NavController, this.parentIndex, null), this.injectorGet(import16.NgControl, this.parentIndex, null), this.injectorGet(import17.DomController, this.parentIndex));
        this.compView_0.create(this._TextInput_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._TextInput_0_3.context);
    };
    View_TextInput_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.TextInput) && (0 === requestNodeIndex))) {
            return this._TextInput_0_3.context;
        }
        return notFoundResult;
    };
    View_TextInput_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._TextInput_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        if (!throwOnChange) {
            this._TextInput_0_3.context.ngAfterContentChecked();
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_TextInput_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._TextInput_0_3.ngOnDestroy();
    };
    View_TextInput_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_TextInput_Host0;
}(import2.AppView));
export var TextInputNgFactory = new import7.ComponentFactory('ion-input', View_TextInput_Host0, import0.TextInput);
var styles_TextInput = [];
var renderType_TextInput = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, styles_TextInput, {});
export var View_TextInput0 = (function (_super) {
    __extends(View_TextInput0, _super);
    function View_TextInput0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_TextInput0, renderType_TextInput, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
        this._expr_21 = import1.UNINITIALIZED;
        this._expr_22 = import1.UNINITIALIZED;
        this._expr_23 = import1.UNINITIALIZED;
    }
    View_TextInput0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._viewQuery_NativeInput_0 = new import18.QueryList();
        this._viewQuery_NextInput_1 = new import18.QueryList();
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'input', new import3.InlineArray2(2, 'class', 'text-input'), null);
        this._NgClass_0_3 = new import19.Wrapper_NgClass(this.parentView.injectorGet(import26.IterableDiffers, this.parentIndex), this.parentView.injectorGet(import27.KeyValueDiffers, this.parentIndex), new import13.ElementRef(this._el_0), this.renderer);
        this._DefaultValueAccessor_0_4 = new import20.Wrapper_DefaultValueAccessor(this.renderer, new import13.ElementRef(this._el_0));
        this._NG_VALUE_ACCESSOR_0_5 = [this._DefaultValueAccessor_0_4.context];
        this._NgModel_0_6 = new import21.Wrapper_NgModel(null, null, null, this._NG_VALUE_ACCESSOR_0_5);
        this._NgControl_0_7 = this._NgModel_0_6.context;
        this._NgControlStatus_0_8 = new import22.Wrapper_NgControlStatus(this._NgControl_0_7);
        this._NativeInput_0_9 = new import23.Wrapper_NativeInput(new import13.ElementRef(this._el_0), this.renderer, this.parentView.injectorGet(import8.Config, this.parentIndex), this._NgControl_0_7);
        this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._vc_1 = new import24.ViewContainer(1, null, this, this._anchor_1);
        this._TemplateRef_1_5 = new import28.TemplateRef_(this, 1, this._anchor_1);
        this._NgIf_1_6 = new import25.Wrapper_NgIf(this._vc_1.vcRef, this._TemplateRef_1_5);
        this._el_2 = import3.createRenderElement(this.renderer, parentRenderNode, 'button', new import3.InlineArray8(8, 'class', 'text-input-clear-icon', 'clear', '', 'ion-button', '', 'type', 'button'), null);
        this.compView_2 = new import37.View_Button0(this.viewUtils, this, 2, this._el_2);
        this._Button_2_3 = new import37.Wrapper_Button('', this.parentView.injectorGet(import8.Config, this.parentIndex), new import13.ElementRef(this._el_2), this.renderer);
        this.compView_2.create(this._Button_2_3.context);
        this._anchor_3 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._vc_3 = new import24.ViewContainer(3, null, this, this._anchor_3);
        this._TemplateRef_3_5 = new import28.TemplateRef_(this, 3, this._anchor_3);
        this._NgIf_3_6 = new import25.Wrapper_NgIf(this._vc_3.vcRef, this._TemplateRef_3_5);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray16(10, 'ngModelChange', null, 'blur', null, 'focus', null, 'input', null, 'keydown', null), this.eventHandler(this.handleEvent_0));
        this._NgModel_0_6.subscribe(this, this.eventHandler(this.handleEvent_0), true);
        this._NativeInput_0_9.subscribe(this, this.eventHandler(this.handleEvent_0), false, false, true);
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_2, new import3.InlineArray4(4, 'click', null, 'mousedown', null), this.eventHandler(this.handleEvent_2));
        this._viewQuery_NativeInput_0.reset([this._NativeInput_0_9.context]);
        this.context._nativeInput = this._viewQuery_NativeInput_0.first;
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._anchor_1,
            this._el_2,
            this._anchor_3
        ]), [
            disposable_0,
            disposable_1
        ]);
        return null;
    };
    View_TextInput0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import29.NgClass) && (0 === requestNodeIndex))) {
            return this._NgClass_0_3.context;
        }
        if (((token === import30.DefaultValueAccessor) && (0 === requestNodeIndex))) {
            return this._DefaultValueAccessor_0_4.context;
        }
        if (((token === import31.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_0_5;
        }
        if (((token === import32.NgModel) && (0 === requestNodeIndex))) {
            return this._NgModel_0_6.context;
        }
        if (((token === import16.NgControl) && (0 === requestNodeIndex))) {
            return this._NgControl_0_7;
        }
        if (((token === import33.NgControlStatus) && (0 === requestNodeIndex))) {
            return this._NgControlStatus_0_8.context;
        }
        if (((token === import34.NativeInput) && (0 === requestNodeIndex))) {
            return this._NativeInput_0_9.context;
        }
        if (((token === import28.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import35.NgIf) && (1 === requestNodeIndex))) {
            return this._NgIf_1_6.context;
        }
        if (((token === import36.Button) && (2 === requestNodeIndex))) {
            return this._Button_2_3.context;
        }
        if (((token === import28.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import35.NgIf) && (3 === requestNodeIndex))) {
            return this._NgIf_3_6.context;
        }
        return notFoundResult;
    };
    View_TextInput0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = 'text-input';
        this._NgClass_0_3.check_klass(currVal_0_0_0, throwOnChange, false);
        var currVal_0_0_1 = ('text-input-' + this.context._mode);
        this._NgClass_0_3.check_ngClass(currVal_0_0_1, throwOnChange, false);
        this._NgClass_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this._DefaultValueAccessor_0_4.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_0_2_0 = this.context._value;
        this._NgModel_0_6.check_model(currVal_0_2_0, throwOnChange, false);
        this._NgModel_0_6.ngDoCheck(this, this._el_0, throwOnChange);
        this._NgControlStatus_0_8.ngDoCheck(this, this._el_0, throwOnChange);
        this._NativeInput_0_9.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_1_0_0 = this.context._useAssist;
        this._NgIf_1_6.check_ngIf(currVal_1_0_0, throwOnChange, false);
        this._NgIf_1_6.ngDoCheck(this, this._anchor_1, throwOnChange);
        var currVal_2_0_0 = '';
        this._Button_2_3.check_clear(currVal_2_0_0, throwOnChange, false);
        if (this._Button_2_3.ngDoCheck(this, this._el_2, throwOnChange)) {
            this.compView_2.markAsCheckOnce();
        }
        var currVal_3_0_0 = this.context._useAssist;
        this._NgIf_3_6.check_ngIf(currVal_3_0_0, throwOnChange, false);
        this._NgIf_3_6.ngDoCheck(this, this._anchor_3, throwOnChange);
        this._vc_1.detectChangesInNestedViews(throwOnChange);
        this._vc_3.detectChangesInNestedViews(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Button_2_3.context.ngAfterContentInit();
            }
        }
        var currVal_21 = this.context.type;
        if (import3.checkBinding(throwOnChange, this._expr_21, currVal_21)) {
            this.renderer.setElementProperty(this._el_0, 'type', currVal_21);
            this._expr_21 = currVal_21;
        }
        var currVal_22 = this.context.placeholder;
        if (import3.checkBinding(throwOnChange, this._expr_22, currVal_22)) {
            this.renderer.setElementProperty(this._el_0, 'placeholder', currVal_22);
            this._expr_22 = currVal_22;
        }
        this._NgControlStatus_0_8.checkHost(this, this, this._el_0, throwOnChange);
        var currVal_23 = !this.context.clearInput;
        if (import3.checkBinding(throwOnChange, this._expr_23, currVal_23)) {
            this.renderer.setElementProperty(this._el_2, 'hidden', currVal_23);
            this._expr_23 = currVal_23;
        }
        this.compView_2.detectChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._viewQuery_NextInput_1.dirty) {
                this._viewQuery_NextInput_1.reset([this._vc_1.mapNestedViews(View_TextInput1, function (nestedView) {
                        return [nestedView._NextInput_0_3.context];
                    })]);
                this.context._nextInput = this._viewQuery_NextInput_1.first;
            }
        }
    };
    View_TextInput0.prototype.destroyInternal = function () {
        this._vc_1.destroyNestedViews();
        this._vc_3.destroyNestedViews();
        this.compView_2.destroy();
        this._NgModel_0_6.ngOnDestroy();
        this._NativeInput_0_9.ngOnDestroy();
    };
    View_TextInput0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 2) && (ngContentIndex == 0))) { }
    };
    View_TextInput0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 1)) {
            return new View_TextInput1(this.viewUtils, this, 1, this._anchor_1, this._vc_1);
        }
        if ((nodeIndex == 3)) {
            return new View_TextInput2(this.viewUtils, this, 3, this._anchor_3, this._vc_3);
        }
        return null;
    };
    View_TextInput0.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_0_4.handleEvent(eventName, $event) && result);
        result = (this._NativeInput_0_9.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.context._value = $event) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'blur')) {
            var pd_sub_1 = (this.context.inputBlurred($event) !== false);
            result = (pd_sub_1 && result);
        }
        if ((eventName == 'focus')) {
            var pd_sub_2 = (this.context.inputFocused($event) !== false);
            result = (pd_sub_2 && result);
        }
        return result;
    };
    View_TextInput0.prototype.handleEvent_2 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.clearTextInput() !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'mousedown')) {
            var pd_sub_1 = (this.context.clearTextInput() !== false);
            result = (pd_sub_1 && result);
        }
        return result;
    };
    return View_TextInput0;
}(import2.AppView));
var View_TextInput1 = (function (_super) {
    __extends(View_TextInput1, _super);
    function View_TextInput1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_TextInput1, renderType_TextInput, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_2 = import1.UNINITIALIZED;
    }
    View_TextInput1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'input', new import3.InlineArray4(4, 'aria-hidden', 'true', 'next-input', ''), null);
        this._NextInput_0_3 = new import23.Wrapper_NextInput();
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'focus', null), this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), [disposable_0]);
        return null;
    };
    View_TextInput1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import34.NextInput) && (0 === requestNodeIndex))) {
            return this._NextInput_0_3.context;
        }
        return notFoundResult;
    };
    View_TextInput1.prototype.detectChangesInternal = function (throwOnChange) {
        this._NextInput_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        var currVal_2 = this.parentView.context.type;
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementProperty(this._el_0, 'type', currVal_2);
            this._expr_2 = currVal_2;
        }
    };
    View_TextInput1.prototype.dirtyParentQueriesInternal = function () {
        this.parentView._viewQuery_NextInput_1.setDirty();
    };
    View_TextInput1.prototype.destroyInternal = function () {
        this._NextInput_0_3.ngOnDestroy();
    };
    View_TextInput1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_TextInput1.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._NextInput_0_3.handleEvent(eventName, $event) && result);
        return result;
    };
    return View_TextInput1;
}(import2.AppView));
var View_TextInput2 = (function (_super) {
    __extends(View_TextInput2, _super);
    function View_TextInput2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_TextInput2, renderType_TextInput, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_TextInput2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', new import3.InlineArray4(4, 'class', 'input-cover', 'tappable', ''), null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray8(8, 'touchstart', null, 'touchend', null, 'mousedown', null, 'mouseup', null), this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), [disposable_0]);
        return null;
    };
    View_TextInput2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_TextInput2.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'touchstart')) {
            var pd_sub_0 = (this.parentView.context.pointerStart($event) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'touchend')) {
            var pd_sub_1 = (this.parentView.context.pointerEnd($event) !== false);
            result = (pd_sub_1 && result);
        }
        if ((eventName == 'mousedown')) {
            var pd_sub_2 = (this.parentView.context.pointerStart($event) !== false);
            result = (pd_sub_2 && result);
        }
        if ((eventName == 'mouseup')) {
            var pd_sub_3 = (this.parentView.context.pointerEnd($event) !== false);
            result = (pd_sub_3 && result);
        }
        return result;
    };
    return View_TextInput2;
}(import2.AppView));
//# sourceMappingURL=input.ngfactory.js.map