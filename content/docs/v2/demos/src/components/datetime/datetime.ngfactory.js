/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './datetime';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../util/form';
import * as import9 from '../../config/config';
import * as import10 from '@angular/core/src/linker/element_ref';
import * as import11 from '../item/item';
import * as import12 from '../picker/picker';
import * as import13 from '@angular/forms/src/directives/control_value_accessor';
import * as import14 from '../button/button';
import * as import15 from '../button/button.ngfactory';
export var Wrapper_DateTime = (function () {
    function Wrapper_DateTime(p0, p1, p2, p3, p4, p5) {
        this._changed = false;
        this.context = new import0.DateTime(p0, p1, p2, p3, p4, p5);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
        this._expr_5 = import1.UNINITIALIZED;
        this._expr_6 = import1.UNINITIALIZED;
        this._expr_7 = import1.UNINITIALIZED;
        this._expr_8 = import1.UNINITIALIZED;
        this._expr_9 = import1.UNINITIALIZED;
        this._expr_10 = import1.UNINITIALIZED;
        this._expr_11 = import1.UNINITIALIZED;
        this._expr_12 = import1.UNINITIALIZED;
        this._expr_13 = import1.UNINITIALIZED;
        this._expr_14 = import1.UNINITIALIZED;
        this._expr_15 = import1.UNINITIALIZED;
        this._expr_16 = import1.UNINITIALIZED;
        this._expr_17 = import1.UNINITIALIZED;
        this._expr_18 = import1.UNINITIALIZED;
    }
    Wrapper_DateTime.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_DateTime.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy();
        (this.subscription0 && this.subscription0.unsubscribe());
        (this.subscription1 && this.subscription1.unsubscribe());
    };
    Wrapper_DateTime.prototype.check_min = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.min = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_max = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.max = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_displayFormat = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.displayFormat = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_pickerFormat = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.pickerFormat = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_cancelText = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_4, currValue))) {
            this._changed = true;
            this.context.cancelText = currValue;
            this._expr_4 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_doneText = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_5, currValue))) {
            this._changed = true;
            this.context.doneText = currValue;
            this._expr_5 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_yearValues = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_6, currValue))) {
            this._changed = true;
            this.context.yearValues = currValue;
            this._expr_6 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_monthValues = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_7, currValue))) {
            this._changed = true;
            this.context.monthValues = currValue;
            this._expr_7 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_dayValues = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_8, currValue))) {
            this._changed = true;
            this.context.dayValues = currValue;
            this._expr_8 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_hourValues = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_9, currValue))) {
            this._changed = true;
            this.context.hourValues = currValue;
            this._expr_9 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_minuteValues = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_10, currValue))) {
            this._changed = true;
            this.context.minuteValues = currValue;
            this._expr_10 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_monthNames = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_11, currValue))) {
            this._changed = true;
            this.context.monthNames = currValue;
            this._expr_11 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_monthShortNames = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_12, currValue))) {
            this._changed = true;
            this.context.monthShortNames = currValue;
            this._expr_12 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_dayNames = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_13, currValue))) {
            this._changed = true;
            this.context.dayNames = currValue;
            this._expr_13 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_dayShortNames = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_14, currValue))) {
            this._changed = true;
            this.context.dayShortNames = currValue;
            this._expr_14 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_pickerOptions = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_15, currValue))) {
            this._changed = true;
            this.context.pickerOptions = currValue;
            this._expr_15 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_mode = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_16, currValue))) {
            this._changed = true;
            this.context.mode = currValue;
            this._expr_16 = currValue;
        }
    };
    Wrapper_DateTime.prototype.check_disabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_17, currValue))) {
            this._changed = true;
            this.context.disabled = currValue;
            this._expr_17 = currValue;
        }
    };
    Wrapper_DateTime.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_DateTime.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_18 = this.context._disabled;
        if (import3.checkBinding(throwOnChange, this._expr_18, currVal_18)) {
            view.renderer.setElementClass(el, 'datetime-disabled', currVal_18);
            this._expr_18 = currVal_18;
        }
    };
    Wrapper_DateTime.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context._click($event) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'keyup.space')) {
            var pd_sub_1 = (this.context._keyup() !== false);
            result = (pd_sub_1 && result);
        }
        return result;
    };
    Wrapper_DateTime.prototype.subscribe = function (view, _eventHandler, emit0, emit1) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.ionChange.subscribe(_eventHandler.bind(view, 'ionChange')));
        }
        if (emit1) {
            (this.subscription1 = this.context.ionCancel.subscribe(_eventHandler.bind(view, 'ionCancel')));
        }
    };
    return Wrapper_DateTime;
}());
var renderType_DateTime_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_DateTime_Host0 = (function (_super) {
    __extends(View_DateTime_Host0, _super);
    function View_DateTime_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_DateTime_Host0, renderType_DateTime_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    Object.defineProperty(View_DateTime_Host0.prototype, "_NG_VALUE_ACCESSOR_0_4", {
        get: function () {
            if ((this.__NG_VALUE_ACCESSOR_0_4 == null)) {
                (this.__NG_VALUE_ACCESSOR_0_4 = [this._DateTime_0_3.context]);
            }
            return this.__NG_VALUE_ACCESSOR_0_4;
        },
        enumerable: true,
        configurable: true
    });
    View_DateTime_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ion-datetime', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_DateTime0(this.viewUtils, this, 0, this._el_0);
        this._DateTime_0_3 = new Wrapper_DateTime(this.injectorGet(import8.Form, this.parentIndex), this.injectorGet(import9.Config, this.parentIndex), new import10.ElementRef(this._el_0), this.renderer, this.injectorGet(import11.Item, this.parentIndex, null), this.injectorGet(import12.PickerController, this.parentIndex, null));
        this.compView_0.create(this._DateTime_0_3.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray4(4, 'click', null, 'keyup.space', null), this.eventHandler(this.handleEvent_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), [disposable_0]);
        return new import7.ComponentRef_(0, this, this._el_0, this._DateTime_0_3.context);
    };
    View_DateTime_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.DateTime) && (0 === requestNodeIndex))) {
            return this._DateTime_0_3.context;
        }
        if (((token === import13.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_0_4;
        }
        return notFoundResult;
    };
    View_DateTime_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._DateTime_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._DateTime_0_3.context.ngAfterContentInit();
            }
        }
        this._DateTime_0_3.checkHost(this, this.compView_0, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_DateTime_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._DateTime_0_3.ngOnDestroy();
    };
    View_DateTime_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_DateTime_Host0.prototype.handleEvent_0 = function (eventName, $event) {
        this.compView_0.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DateTime_0_3.handleEvent(eventName, $event) && result);
        return result;
    };
    return View_DateTime_Host0;
}(import2.AppView));
export var DateTimeNgFactory = new import7.ComponentFactory('ion-datetime', View_DateTime_Host0, import0.DateTime);
var styles_DateTime = [];
var renderType_DateTime = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, styles_DateTime, {});
export var View_DateTime0 = (function (_super) {
    __extends(View_DateTime0, _super);
    function View_DateTime0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_DateTime0, renderType_DateTime, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
        this._expr_5 = import1.UNINITIALIZED;
        this._expr_6 = import1.UNINITIALIZED;
        this._expr_7 = import1.UNINITIALIZED;
        this._expr_8 = import1.UNINITIALIZED;
    }
    View_DateTime0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'datetime-text'), null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this._el_2 = import3.createRenderElement(this.renderer, parentRenderNode, 'button', new import3.InlineArray8(8, 'aria-haspopup', 'true', 'class', 'item-cover', 'ion-button', 'item-cover', 'type', 'button'), null);
        this.compView_2 = new import15.View_Button0(this.viewUtils, this, 2, this._el_2);
        this._Button_2_3 = new import15.Wrapper_Button('item-cover', this.parentView.injectorGet(import9.Config, this.parentIndex), new import10.ElementRef(this._el_2), this.renderer);
        this.compView_2.create(this._Button_2_3.context);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2
        ]), null);
        return null;
    };
    View_DateTime0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import14.Button) && (2 === requestNodeIndex))) {
            return this._Button_2_3.context;
        }
        return notFoundResult;
    };
    View_DateTime0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._Button_2_3.ngDoCheck(this, this._el_2, throwOnChange)) {
            this.compView_2.markAsCheckOnce();
        }
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Button_2_3.context.ngAfterContentInit();
            }
        }
        var currVal_5 = import3.inlineInterpolate(1, '', this.context._text, '');
        if (import3.checkBinding(throwOnChange, this._expr_5, currVal_5)) {
            this.renderer.setText(this._text_1, currVal_5);
            this._expr_5 = currVal_5;
        }
        var currVal_6 = this.context.id;
        if (import3.checkBinding(throwOnChange, this._expr_6, currVal_6)) {
            this.renderer.setElementProperty(this._el_2, 'id', currVal_6);
            this._expr_6 = currVal_6;
        }
        var currVal_7 = this.context._labelId;
        if (import3.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            this.renderer.setElementAttribute(this._el_2, 'aria-labelledby', ((currVal_7 == null) ? null : currVal_7.toString()));
            this._expr_7 = currVal_7;
        }
        var currVal_8 = this.context._disabled;
        if (import3.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this.renderer.setElementAttribute(this._el_2, 'aria-disabled', ((currVal_8 == null) ? null : currVal_8.toString()));
            this._expr_8 = currVal_8;
        }
        this.compView_2.detectChanges(throwOnChange);
    };
    View_DateTime0.prototype.destroyInternal = function () {
        this.compView_2.destroy();
    };
    View_DateTime0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 2) && (ngContentIndex == 0))) { }
    };
    return View_DateTime0;
}(import2.AppView));
//# sourceMappingURL=datetime.ngfactory.js.map