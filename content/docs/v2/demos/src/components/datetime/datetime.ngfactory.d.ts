/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
import * as import0 from './datetime';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import14 from '../button/button';
import * as import15 from '../button/button.ngfactory';
export declare class Wrapper_DateTime {
    _eventHandler: Function;
    context: import0.DateTime;
    _changed: boolean;
    _expr_0: any;
    _expr_1: any;
    _expr_2: any;
    _expr_3: any;
    _expr_4: any;
    _expr_5: any;
    _expr_6: any;
    _expr_7: any;
    _expr_8: any;
    _expr_9: any;
    _expr_10: any;
    _expr_11: any;
    _expr_12: any;
    _expr_13: any;
    _expr_14: any;
    _expr_15: any;
    _expr_16: any;
    _expr_17: any;
    _expr_18: any;
    subscription0: any;
    subscription1: any;
    constructor(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any);
    ngOnDetach(view: import2.AppView<any>, componentView: import2.AppView<any>, el: any): void;
    ngOnDestroy(): void;
    check_min(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_max(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_displayFormat(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_pickerFormat(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_cancelText(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_doneText(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_yearValues(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_monthValues(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_dayValues(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_hourValues(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_minuteValues(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_monthNames(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_monthShortNames(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_dayNames(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_dayShortNames(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_pickerOptions(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_mode(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_disabled(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    ngDoCheck(view: import2.AppView<any>, el: any, throwOnChange: boolean): boolean;
    checkHost(view: import2.AppView<any>, componentView: import2.AppView<any>, el: any, throwOnChange: boolean): void;
    handleEvent(eventName: string, $event: any): boolean;
    subscribe(view: import2.AppView<any>, _eventHandler: any, emit0: boolean, emit1: boolean): void;
}
export declare const DateTimeNgFactory: import7.ComponentFactory<import0.DateTime>;
export declare class View_DateTime0 extends import2.AppView<import0.DateTime> {
    _el_0: any;
    _text_1: any;
    _el_2: any;
    compView_2: import2.AppView<import14.Button>;
    _Button_2_3: import15.Wrapper_Button;
    _expr_5: any;
    _expr_6: any;
    _expr_7: any;
    _expr_8: any;
    constructor(viewUtils: import3.ViewUtils, parentView: import2.AppView<any>, parentIndex: number, parentElement: any);
    createInternal(rootSelector: string): import7.ComponentRef<any>;
    injectorGetInternal(token: any, requestNodeIndex: number, notFoundResult: any): any;
    detectChangesInternal(throwOnChange: boolean): void;
    destroyInternal(): void;
    visitProjectableNodesInternal(nodeIndex: number, ngContentIndex: number, cb: any, ctx: any): void;
}
