/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './toolbar-title';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../config/config';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from './toolbar';
import * as import11 from '../navbar/navbar';
import * as import12 from '../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import13 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import14 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import15 from '@angular/common/src/directives/ng_class';
export var Wrapper_ToolbarTitle = (function () {
    function Wrapper_ToolbarTitle(p0, p1, p2, p3, p4) {
        this._changed = false;
        this.context = new import0.ToolbarTitle(p0, p1, p2, p3, p4);
    }
    Wrapper_ToolbarTitle.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ToolbarTitle.prototype.ngOnDestroy = function () {
    };
    Wrapper_ToolbarTitle.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_ToolbarTitle.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_ToolbarTitle.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_ToolbarTitle.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_ToolbarTitle;
}());
var renderType_ToolbarTitle_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_ToolbarTitle_Host0 = (function (_super) {
    __extends(View_ToolbarTitle_Host0, _super);
    function View_ToolbarTitle_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ToolbarTitle_Host0, renderType_ToolbarTitle_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways);
    }
    View_ToolbarTitle_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ion-title', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_ToolbarTitle0(this.viewUtils, this, 0, this._el_0);
        this._ToolbarTitle_0_3 = new Wrapper_ToolbarTitle(this.injectorGet(import8.Config, this.parentIndex), new import9.ElementRef(this._el_0), this.renderer, this.injectorGet(import10.Toolbar, this.parentIndex, null), this.injectorGet(import11.Navbar, this.parentIndex, null));
        this.compView_0.create(this._ToolbarTitle_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._ToolbarTitle_0_3.context);
    };
    View_ToolbarTitle_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.ToolbarTitle) && (0 === requestNodeIndex))) {
            return this._ToolbarTitle_0_3.context;
        }
        return notFoundResult;
    };
    View_ToolbarTitle_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._ToolbarTitle_0_3.ngDoCheck(this, this._el_0, throwOnChange)) {
            this.compView_0.markAsCheckOnce();
        }
        this.compView_0.detectChanges(throwOnChange);
    };
    View_ToolbarTitle_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_ToolbarTitle_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_ToolbarTitle_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
    };
    return View_ToolbarTitle_Host0;
}(import1.AppView));
export var ToolbarTitleNgFactory = new import7.ComponentFactory('ion-title', View_ToolbarTitle_Host0, import0.ToolbarTitle);
var styles_ToolbarTitle = [];
var renderType_ToolbarTitle = import3.createRenderComponentType('', 1, import4.ViewEncapsulation.None, styles_ToolbarTitle, {});
export var View_ToolbarTitle0 = (function (_super) {
    __extends(View_ToolbarTitle0, _super);
    function View_ToolbarTitle0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ToolbarTitle0, renderType_ToolbarTitle, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckOnce);
    }
    View_ToolbarTitle0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'toolbar-title'), null);
        this._NgClass_0_3 = new import12.Wrapper_NgClass(this.parentView.injectorGet(import13.IterableDiffers, this.parentIndex), this.parentView.injectorGet(import14.KeyValueDiffers, this.parentIndex), new import9.ElementRef(this._el_0), this.renderer);
        this.projectNodes(this._el_0, 0);
        this.init(null, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    };
    View_ToolbarTitle0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import15.NgClass) && (0 === requestNodeIndex))) {
            return this._NgClass_0_3.context;
        }
        return notFoundResult;
    };
    View_ToolbarTitle0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = 'toolbar-title';
        this._NgClass_0_3.check_klass(currVal_0_0_0, throwOnChange, false);
        var currVal_0_0_1 = ('toolbar-title-' + this.context._mode);
        this._NgClass_0_3.check_ngClass(currVal_0_0_1, throwOnChange, false);
        this._NgClass_0_3.ngDoCheck(this, this._el_0, throwOnChange);
    };
    return View_ToolbarTitle0;
}(import1.AppView));
//# sourceMappingURL=toolbar-title.ngfactory.js.map